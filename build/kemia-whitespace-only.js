var COMPILED=false;var goog=goog||{};goog.global=this;goog.DEBUG=true;goog.LOCALE="en";goog.evalWorksForGlobals_=null;goog.provide=function(name){if(!COMPILED){if(goog.getObjectByName(name)&&!goog.implicitNamespaces_[name])throw Error('Namespace "'+name+'" already declared.');var namespace=name;while(namespace=namespace.substring(0,namespace.lastIndexOf(".")))goog.implicitNamespaces_[namespace]=true}goog.exportPath_(name)};if(!COMPILED)goog.implicitNamespaces_={};
goog.exportPath_=function(name,opt_object,opt_objectToExportTo){var parts=name.split(".");var cur=opt_objectToExportTo||goog.global;if(!(parts[0]in cur)&&cur.execScript)cur.execScript("var "+parts[0]);for(var part;parts.length&&(part=parts.shift());)if(!parts.length&&goog.isDef(opt_object))cur[part]=opt_object;else if(cur[part])cur=cur[part];else cur=cur[part]={}};
goog.getObjectByName=function(name,opt_obj){var parts=name.split(".");var cur=opt_obj||goog.global;for(var part;part=parts.shift();)if(cur[part])cur=cur[part];else return null;return cur};goog.globalize=function(obj,opt_global){var global=opt_global||goog.global;for(var x in obj)global[x]=obj[x]};
goog.addDependency=function(relPath,provides,requires){if(!COMPILED){var provide,require;var path=relPath.replace(/\\/g,"/");var deps=goog.dependencies_;for(var i=0;provide=provides[i];i++){deps.nameToPath[provide]=path;if(!(path in deps.pathToNames))deps.pathToNames[path]={};deps.pathToNames[path][provide]=true}for(var j=0;require=requires[j];j++){if(!(path in deps.requires))deps.requires[path]={};deps.requires[path][require]=true}}};
goog.require=function(rule){if(!COMPILED){if(goog.getObjectByName(rule))return;var path=goog.getPathFromDeps_(rule);if(path){goog.included_[path]=true;goog.writeScripts_()}else{var errorMessage="goog.require could not find: "+rule;if(goog.global.console)goog.global.console["error"](errorMessage);throw Error(errorMessage);}}};goog.basePath="";goog.global.CLOSURE_BASE_PATH;goog.global.CLOSURE_NO_DEPS;goog.nullFunction=function(){};goog.identityFunction=function(var_args){return arguments[0]};
goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(ctor){ctor.getInstance=function(){return ctor.instance_||(ctor.instance_=new ctor)}};
if(!COMPILED){goog.included_={};goog.dependencies_={pathToNames:{},nameToPath:{},requires:{},visited:{},written:{}};goog.inHtmlDocument_=function(){var doc=goog.global.document;return typeof doc!="undefined"&&"write"in doc};goog.findBasePath_=function(){if(!goog.inHtmlDocument_())return;var doc=goog.global.document;if(goog.global.CLOSURE_BASE_PATH){goog.basePath=goog.global.CLOSURE_BASE_PATH;return}var scripts=doc.getElementsByTagName("script");for(var i=scripts.length-1;i>=0;--i){var src=scripts[i].src;
var l=src.length;if(src.substr(l-7)=="base.js"){goog.basePath=src.substr(0,l-7);return}}};goog.writeScriptTag_=function(src){if(goog.inHtmlDocument_()&&!goog.dependencies_.written[src]){goog.dependencies_.written[src]=true;var doc=goog.global.document;doc.write('<script type="text/javascript" src="'+src+'"></'+"script>")}};goog.writeScripts_=function(){var scripts=[];var seenScript={};var deps=goog.dependencies_;function visitNode(path){if(path in deps.written)return;if(path in deps.visited){if(!(path in
seenScript)){seenScript[path]=true;scripts.push(path)}return}deps.visited[path]=true;if(path in deps.requires)for(var requireName in deps.requires[path])if(requireName in deps.nameToPath)visitNode(deps.nameToPath[requireName]);else if(!goog.getObjectByName(requireName))throw Error("Undefined nameToPath for "+requireName);if(!(path in seenScript)){seenScript[path]=true;scripts.push(path)}}for(var path in goog.included_)if(!deps.written[path])visitNode(path);for(var i=0;i<scripts.length;i++)if(scripts[i])goog.writeScriptTag_(goog.basePath+
scripts[i]);else throw Error("Undefined script input");};goog.getPathFromDeps_=function(rule){if(rule in goog.dependencies_.nameToPath)return goog.dependencies_.nameToPath[rule];else return null};goog.findBasePath_();if(!goog.global.CLOSURE_NO_DEPS)goog.writeScriptTag_(goog.basePath+"deps.js")}
goog.typeOf=function(value){var s=typeof value;if(s=="object")if(value){if(value instanceof Array||!(value instanceof Object)&&Object.prototype.toString.call(value)=="[object Array]"||typeof value.length=="number"&&typeof value.splice!="undefined"&&typeof value.propertyIsEnumerable!="undefined"&&!value.propertyIsEnumerable("splice"))return"array";if(!(value instanceof Object)&&(Object.prototype.toString.call(value)=="[object Function]"||typeof value.call!="undefined"&&typeof value.propertyIsEnumerable!=
"undefined"&&!value.propertyIsEnumerable("call")))return"function"}else return"null";else if(s=="function"&&typeof value.call=="undefined")return"object";return s};goog.propertyIsEnumerableCustom_=function(object,propName){if(propName in object)for(var key in object)if(key==propName&&Object.prototype.hasOwnProperty.call(object,propName))return true;return false};
goog.propertyIsEnumerable_=function(object,propName){if(object instanceof Object)return Object.prototype.propertyIsEnumerable.call(object,propName);else return goog.propertyIsEnumerableCustom_(object,propName)};goog.isDef=function(val){return val!==undefined};goog.isNull=function(val){return val===null};goog.isDefAndNotNull=function(val){return val!=null};goog.isArray=function(val){return goog.typeOf(val)=="array"};
goog.isArrayLike=function(val){var type=goog.typeOf(val);return type=="array"||type=="object"&&typeof val.length=="number"};goog.isDateLike=function(val){return goog.isObject(val)&&typeof val.getFullYear=="function"};goog.isString=function(val){return typeof val=="string"};goog.isBoolean=function(val){return typeof val=="boolean"};goog.isNumber=function(val){return typeof val=="number"};goog.isFunction=function(val){return goog.typeOf(val)=="function"};
goog.isObject=function(val){var type=goog.typeOf(val);return type=="object"||type=="array"||type=="function"};goog.getUid=function(obj){if(obj.hasOwnProperty&&obj.hasOwnProperty(goog.UID_PROPERTY_))return obj[goog.UID_PROPERTY_];if(!obj[goog.UID_PROPERTY_])obj[goog.UID_PROPERTY_]=++goog.uidCounter_;return obj[goog.UID_PROPERTY_]};goog.removeUid=function(obj){if("removeAttribute"in obj)obj.removeAttribute(goog.UID_PROPERTY_);try{delete obj[goog.UID_PROPERTY_]}catch(ex){}};
goog.UID_PROPERTY_="closure_uid_"+Math.floor(Math.random()*2147483648).toString(36);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(proto){var type=goog.typeOf(proto);if(type=="object"||type=="array"){if(proto.clone)return proto.clone.call(proto);var clone=type=="array"?[]:{};for(var key in proto)clone[key]=goog.cloneObject(proto[key]);return clone}return proto};Object.prototype.clone;
goog.bind=function(fn,selfObj,var_args){var context=selfObj||goog.global;if(arguments.length>2){var boundArgs=Array.prototype.slice.call(arguments,2);return function(){var newArgs=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(newArgs,boundArgs);return fn.apply(context,newArgs)}}else return function(){return fn.apply(context,arguments)}};
goog.partial=function(fn,var_args){var args=Array.prototype.slice.call(arguments,1);return function(){var newArgs=Array.prototype.slice.call(arguments);newArgs.unshift.apply(newArgs,args);return fn.apply(this,newArgs)}};goog.mixin=function(target,source){for(var x in source)target[x]=source[x]};goog.now=Date.now||function(){return+new Date};
goog.globalEval=function(script){if(goog.global.execScript)goog.global.execScript(script,"JavaScript");else if(goog.global.eval){if(goog.evalWorksForGlobals_==null){goog.global.eval("var _et_ = 1;");if(typeof goog.global["_et_"]!="undefined"){delete goog.global["_et_"];goog.evalWorksForGlobals_=true}else goog.evalWorksForGlobals_=false}if(goog.evalWorksForGlobals_)goog.global.eval(script);else{var doc=goog.global.document;var scriptElt=doc.createElement("script");scriptElt.type="text/javascript";
scriptElt.defer=false;scriptElt.appendChild(doc.createTextNode(script));doc.body.appendChild(scriptElt);doc.body.removeChild(scriptElt)}}else throw Error("goog.globalEval not available");};goog.typedef=true;goog.cssNameMapping_;goog.getCssName=function(className,opt_modifier){var cssName=className+(opt_modifier?"-"+opt_modifier:"");return goog.cssNameMapping_&&cssName in goog.cssNameMapping_?goog.cssNameMapping_[cssName]:cssName};goog.setCssNameMapping=function(mapping){goog.cssNameMapping_=mapping};
goog.getMsg=function(str,opt_values){var values=opt_values||{};for(var key in values)str=str.replace(new RegExp("\\{\\$"+key+"\\}","gi"),values[key]);return str};goog.exportSymbol=function(publicPath,object,opt_objectToExportTo){goog.exportPath_(publicPath,object,opt_objectToExportTo)};goog.exportProperty=function(object,publicName,symbol){object[publicName]=symbol};
goog.inherits=function(childCtor,parentCtor){function tempCtor(){}tempCtor.prototype=parentCtor.prototype;childCtor.superClass_=parentCtor.prototype;childCtor.prototype=new tempCtor;childCtor.prototype.constructor=childCtor};
goog.base=function(me,opt_methodName,var_args){var caller=arguments.callee.caller;if(caller.superClass_)return caller.superClass_.constructor.apply(me,Array.prototype.slice.call(arguments,1));var args=Array.prototype.slice.call(arguments,2);var foundCaller=false;for(var ctor=me.constructor;ctor;ctor=ctor.superClass_&&ctor.superClass_.constructor)if(ctor.prototype[opt_methodName]===caller)foundCaller=true;else if(foundCaller)return ctor.prototype[opt_methodName].apply(me,args);if(me[opt_methodName]===
caller)return me.constructor.prototype[opt_methodName].apply(me,args);else throw Error("goog.base called from a method of one name "+"to a method of a different name");};goog.provide("kemia.query.Query");
(function(){kemia.query.IQuery=function(){throw Error("IQuery: Interface should never be constructed!");this.addAtom=function(atom){};this.addBond=function(bond){};this.countAtoms=function(){};this.getAtom=function(index){};this.findBond=function(atom1,atom2){};this.indexOfAtom=function(atom){}};kemia.query.IQueryAtom=function(){this.matches=function(atom,opt_molecule,opt_sssr){};this.getNeighbors=function(){}};kemia.query.IQueryBond=function(source,target){this.matches=function(bond,opt_molecule,
opt_sssr){}};kemia.query.IQueryCompiler={compile:function(variable){}};kemia.query.IMapper=function(query){this.mapFirst=function(molecule){};this.mapUnique=function(molecule){};this.mapUniqueCallback=function(molecule,callback){}};kemia.query.Query=function(){this.atoms=[];this.bonds=[];this.isSSSRRequired=false};kemia.query.Query.prototype.countAtoms=function(){return this.atoms.length};kemia.query.Query.prototype.indexOfAtom=function(atom){return goog.array.indexOf(this.atoms,atom)};kemia.query.Query.prototype.getAtom=
function(index){return this.atoms[index]};kemia.query.Query.prototype.addAtom=function(atom){this.atoms.push(atom)};kemia.query.Query.prototype.addBond=function(bond){bond.source.neighbors.push(bond.target);bond.target.neighbors.push(bond.source);this.bonds.push(bond)};kemia.query.Query.prototype.findBond=function(atom1,atom2){for(var i=0,il=this.bonds.length;i<il;i++){var bond=this.bonds[i];if(atom1===bond.source&&atom2===bond.target||atom2===bond.source&&atom1===bond.target)return bond}return null};
kemia.query.QueryAtom=function(){this.symbols=[];this.valence=0;this.neighbors=[]};kemia.query.QueryAtom.prototype.matches=function(atom,opt_molecule,opt_sssr){var symbolMatches=true;if(this.symbols.length)if(goog.array.indexOf(this.symbols,atom.symbol)===-1)symbolMatches=false;var valenceMatches=this.valence<=atom.countBonds();return symbolMatches&&valenceMatches};kemia.query.QueryAtom.prototype.getNeighbors=function(){return this.neighbors};kemia.query.QueryBond=function(source,target){this.orders=
[];this.source=source;this.target=target};kemia.query.QueryBond.prototype.matches=function(bond,opt_molecule,opt_sssr){if(!this.orders.length)return true;if(goog.array.indexOf(this.orders,bond.order)!==-1)return true;return false}})();goog.provide("goog.array");goog.array.ArrayLike=goog.typedef;goog.array.peek=function(array){return array[array.length-1]};goog.array.ARRAY_PROTOTYPE_=Array.prototype;
goog.array.indexOf=goog.array.ARRAY_PROTOTYPE_.indexOf?function(arr,obj,opt_fromIndex){return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr,obj,opt_fromIndex)}:function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?0:opt_fromIndex<0?Math.max(0,arr.length+opt_fromIndex):opt_fromIndex;if(goog.isString(arr)){if(!goog.isString(obj)||obj.length!=1)return-1;return arr.indexOf(obj,fromIndex)}for(var i=fromIndex;i<arr.length;i++)if(i in arr&&arr[i]===obj)return i;return-1};
goog.array.lastIndexOf=goog.array.ARRAY_PROTOTYPE_.lastIndexOf?function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?arr.length-1:opt_fromIndex;return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr,obj,fromIndex)}:function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?arr.length-1:opt_fromIndex;if(fromIndex<0)fromIndex=Math.max(0,arr.length+fromIndex);if(goog.isString(arr)){if(!goog.isString(obj)||obj.length!=1)return-1;return arr.lastIndexOf(obj,fromIndex)}for(var i=fromIndex;i>=
0;i--)if(i in arr&&arr[i]===obj)return i;return-1};goog.array.forEach=goog.array.ARRAY_PROTOTYPE_.forEach?function(arr,f,opt_obj){goog.array.ARRAY_PROTOTYPE_.forEach.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2)f.call(opt_obj,arr2[i],i,arr)};
goog.array.forEachRight=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=l-1;i>=0;--i)if(i in arr2)f.call(opt_obj,arr2[i],i,arr)};
goog.array.filter=goog.array.ARRAY_PROTOTYPE_.filter?function(arr,f,opt_obj){return goog.array.ARRAY_PROTOTYPE_.filter.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var res=[];var resLength=0;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2){var val=arr2[i];if(f.call(opt_obj,val,i,arr))res[resLength++]=val}return res};
goog.array.map=goog.array.ARRAY_PROTOTYPE_.map?function(arr,f,opt_obj){return goog.array.ARRAY_PROTOTYPE_.map.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var res=new Array(l);var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2)res[i]=f.call(opt_obj,arr2[i],i,arr);return res};
goog.array.reduce=function(arr,f,val,opt_obj){if(arr.reduce)if(opt_obj)return arr.reduce(goog.bind(f,opt_obj),val);else return arr.reduce(f,val);var rval=val;goog.array.forEach(arr,function(val,index){rval=f.call(opt_obj,rval,val,index,arr)});return rval};
goog.array.reduceRight=function(arr,f,val,opt_obj){if(arr.reduceRight)if(opt_obj)return arr.reduceRight(goog.bind(f,opt_obj),val);else return arr.reduceRight(f,val);var rval=val;goog.array.forEachRight(arr,function(val,index){rval=f.call(opt_obj,rval,val,index,arr)});return rval};
goog.array.some=goog.array.ARRAY_PROTOTYPE_.some?function(arr,f,opt_obj){return goog.array.ARRAY_PROTOTYPE_.some.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return true;return false};
goog.array.every=goog.array.ARRAY_PROTOTYPE_.every?function(arr,f,opt_obj){return goog.array.ARRAY_PROTOTYPE_.every.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&!f.call(opt_obj,arr2[i],i,arr))return false;return true};goog.array.find=function(arr,f,opt_obj){var i=goog.array.findIndex(arr,f,opt_obj);return i<0?null:goog.isString(arr)?arr.charAt(i):arr[i]};
goog.array.findIndex=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return i;return-1};goog.array.findRight=function(arr,f,opt_obj){var i=goog.array.findIndexRight(arr,f,opt_obj);return i<0?null:goog.isString(arr)?arr.charAt(i):arr[i]};
goog.array.findIndexRight=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=l-1;i>=0;i--)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return i;return-1};goog.array.contains=function(arr,obj){return goog.array.indexOf(arr,obj)>=0};goog.array.isEmpty=function(arr){return arr.length==0};goog.array.clear=function(arr){if(!goog.isArray(arr))for(var i=arr.length-1;i>=0;i--)delete arr[i];arr.length=0};
goog.array.insert=function(arr,obj){if(!goog.array.contains(arr,obj))arr.push(obj)};goog.array.insertAt=function(arr,obj,opt_i){goog.array.splice(arr,opt_i,0,obj)};goog.array.insertArrayAt=function(arr,elementsToAdd,opt_i){goog.partial(goog.array.splice,arr,opt_i,0).apply(null,elementsToAdd)};goog.array.insertBefore=function(arr,obj,opt_obj2){var i;if(arguments.length==2||(i=goog.array.indexOf(arr,opt_obj2))<0)arr.push(obj);else goog.array.insertAt(arr,obj,i)};
goog.array.remove=function(arr,obj){var i=goog.array.indexOf(arr,obj);var rv;if(rv=i>=0)goog.array.removeAt(arr,i);return rv};goog.array.removeAt=function(arr,i){return goog.array.ARRAY_PROTOTYPE_.splice.call(arr,i,1).length==1};goog.array.removeIf=function(arr,f,opt_obj){var i=goog.array.findIndex(arr,f,opt_obj);if(i>=0){goog.array.removeAt(arr,i);return true}return false};goog.array.concat=function(var_args){return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_,arguments)};
goog.array.clone=function(arr){if(goog.isArray(arr))return goog.array.concat(arr);else{var rv=[];for(var i=0,len=arr.length;i<len;i++)rv[i]=arr[i];return rv}};goog.array.toArray=function(object){if(goog.isArray(object))return goog.array.concat(object);return goog.array.clone(object)};
goog.array.extend=function(arr1,var_args){for(var i=1;i<arguments.length;i++){var arr2=arguments[i];var isArrayLike;if(goog.isArray(arr2)||(isArrayLike=goog.isArrayLike(arr2))&&arr2.hasOwnProperty("callee"))arr1.push.apply(arr1,arr2);else if(isArrayLike){var len1=arr1.length;var len2=arr2.length;for(var j=0;j<len2;j++)arr1[len1+j]=arr2[j]}else arr1.push(arr2)}};goog.array.splice=function(arr,index,howMany,var_args){return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr,goog.array.slice(arguments,1))};
goog.array.slice=function(arr,start,opt_end){if(arguments.length<=2)return goog.array.ARRAY_PROTOTYPE_.slice.call(arr,start);else return goog.array.ARRAY_PROTOTYPE_.slice.call(arr,start,opt_end)};
goog.array.removeDuplicates=function(arr,opt_rv){var rv=opt_rv||arr;var seen={},cursorInsert=0,cursorRead=0;while(cursorRead<arr.length){var current=arr[cursorRead++];var uid=goog.isObject(current)?goog.getUid(current):current;if(!Object.prototype.hasOwnProperty.call(seen,uid)){seen[uid]=true;rv[cursorInsert++]=current}}rv.length=cursorInsert};goog.array.binarySearch=function(arr,target,opt_compareFn){return goog.array.binarySelect(arr,goog.partial(opt_compareFn||goog.array.defaultCompare,target))};
goog.array.binarySelect=function(arr,evaluator,opt_obj){var left=0;var right=arr.length-1;while(left<=right){var mid=left+right>>1;var evalResult=evaluator.call(opt_obj,arr[mid],mid,arr);if(evalResult>0)left=mid+1;else if(evalResult<0)right=mid-1;else return mid}return-(left+1)};goog.array.sort=function(arr,opt_compareFn){goog.array.ARRAY_PROTOTYPE_.sort.call(arr,opt_compareFn||goog.array.defaultCompare)};
goog.array.stableSort=function(arr,opt_compareFn){for(var i=0;i<arr.length;i++)arr[i]={index:i,value:arr[i]};var valueCompareFn=opt_compareFn||goog.array.defaultCompare;function stableCompareFn(obj1,obj2){return valueCompareFn(obj1.value,obj2.value)||obj1.index-obj2.index}goog.array.sort(arr,stableCompareFn);for(var i=0;i<arr.length;i++)arr[i]=arr[i].value};
goog.array.sortObjectsByKey=function(arr,key,opt_compareFn){var compare=opt_compareFn||goog.array.defaultCompare;goog.array.sort(arr,function(a,b){return compare(a[key],b[key])})};goog.array.equals=function(arr1,arr2,opt_equalsFn){if(!goog.isArrayLike(arr1)||!goog.isArrayLike(arr2)||arr1.length!=arr2.length)return false;var l=arr1.length;var equalsFn=opt_equalsFn||goog.array.defaultCompareEquality;for(var i=0;i<l;i++)if(!equalsFn(arr1[i],arr2[i]))return false;return true};
goog.array.compare=function(arr1,arr2,opt_equalsFn){return goog.array.equals(arr1,arr2,opt_equalsFn)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(array,value,opt_compareFn){var index=goog.array.binarySearch(array,value,opt_compareFn);if(index<0){goog.array.insertAt(array,value,-(index+1));return true}return false};
goog.array.binaryRemove=function(array,value,opt_compareFn){var index=goog.array.binarySearch(array,value,opt_compareFn);return index>=0?goog.array.removeAt(array,index):false};goog.array.bucket=function(array,sorter){var buckets={};for(var i=0;i<array.length;i++){var value=array[i];var key=sorter(value,i,array);if(goog.isDef(key)){var bucket=buckets[key]||(buckets[key]=[]);bucket.push(value)}}return buckets};goog.array.repeat=function(value,n){var array=[];for(var i=0;i<n;i++)array[i]=value;return array};
goog.array.flatten=function(var_args){var result=[];for(var i=0;i<arguments.length;i++){var element=arguments[i];if(goog.isArray(element))result.push.apply(result,goog.array.flatten.apply(null,element));else result.push(element)}return result};goog.array.rotate=function(array,n){if(array.length){n%=array.length;if(n>0)goog.array.ARRAY_PROTOTYPE_.unshift.apply(array,array.splice(-n,n));else if(n<0)goog.array.ARRAY_PROTOTYPE_.push.apply(array,array.splice(0,-n))}return array};goog.provide("goog.object");goog.object.forEach=function(obj,f,opt_obj){for(var key in obj)f.call(opt_obj,obj[key],key,obj)};goog.object.filter=function(obj,f,opt_obj){var res={};for(var key in obj)if(f.call(opt_obj,obj[key],key,obj))res[key]=obj[key];return res};goog.object.map=function(obj,f,opt_obj){var res={};for(var key in obj)res[key]=f.call(opt_obj,obj[key],key,obj);return res};goog.object.some=function(obj,f,opt_obj){for(var key in obj)if(f.call(opt_obj,obj[key],key,obj))return true;return false};
goog.object.every=function(obj,f,opt_obj){for(var key in obj)if(!f.call(opt_obj,obj[key],key,obj))return false;return true};goog.object.getCount=function(obj){var rv=0;for(var key in obj)rv++;return rv};goog.object.getAnyKey=function(obj){for(var key in obj)return key};goog.object.getAnyValue=function(obj){for(var key in obj)return obj[key]};goog.object.contains=function(obj,val){return goog.object.containsValue(obj,val)};
goog.object.getValues=function(obj){var res=[];var i=0;for(var key in obj)res[i++]=obj[key];return res};goog.object.getKeys=function(obj){var res=[];var i=0;for(var key in obj)res[i++]=key;return res};goog.object.containsKey=function(obj,key){return key in obj};goog.object.containsValue=function(obj,val){for(var key in obj)if(obj[key]==val)return true;return false};goog.object.findKey=function(obj,f,opt_this){for(var key in obj)if(f.call(opt_this,obj[key],key,obj))return key;return undefined};
goog.object.findValue=function(obj,f,opt_this){var key=goog.object.findKey(obj,f,opt_this);return key&&obj[key]};goog.object.isEmpty=function(obj){for(var key in obj)return false;return true};goog.object.clear=function(obj){var keys=goog.object.getKeys(obj);for(var i=keys.length-1;i>=0;i--)goog.object.remove(obj,keys[i])};goog.object.remove=function(obj,key){var rv;if(rv=key in obj)delete obj[key];return rv};
goog.object.add=function(obj,key,val){if(key in obj)throw Error('The object already contains the key "'+key+'"');goog.object.set(obj,key,val)};goog.object.get=function(obj,key,opt_val){if(key in obj)return obj[key];return opt_val};goog.object.set=function(obj,key,value){obj[key]=value};goog.object.setIfUndefined=function(obj,key,value){return key in obj?obj[key]:(obj[key]=value)};goog.object.clone=function(obj){var res={};for(var key in obj)res[key]=obj[key];return res};
goog.object.transpose=function(obj){var transposed={};for(var key in obj)transposed[obj[key]]=key;return transposed};goog.object.PROTOTYPE_FIELDS_=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"];
goog.object.extend=function(target,var_args){var key,source;for(var i=1;i<arguments.length;i++){source=arguments[i];for(key in source)target[key]=source[key];for(var j=0;j<goog.object.PROTOTYPE_FIELDS_.length;j++){key=goog.object.PROTOTYPE_FIELDS_[j];if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}}};
goog.object.create=function(var_args){var argLength=arguments.length;if(argLength==1&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(argLength%2)throw Error("Uneven number of arguments");var rv={};for(var i=0;i<argLength;i+=2)rv[arguments[i]]=arguments[i+1];return rv};
goog.object.createSet=function(var_args){var argLength=arguments.length;if(argLength==1&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);var rv={};for(var i=0;i<argLength;i++)rv[arguments[i]]=true;return rv};goog.provide("goog.structs");goog.require("goog.array");goog.require("goog.object");goog.structs.getCount=function(col){if(typeof col.getCount=="function")return col.getCount();if(goog.isArrayLike(col)||goog.isString(col))return col.length;return goog.object.getCount(col)};
goog.structs.getValues=function(col){if(typeof col.getValues=="function")return col.getValues();if(goog.isString(col))return col.split("");if(goog.isArrayLike(col)){var rv=[];var l=col.length;for(var i=0;i<l;i++)rv.push(col[i]);return rv}return goog.object.getValues(col)};
goog.structs.getKeys=function(col){if(typeof col.getKeys=="function")return col.getKeys();if(typeof col.getValues=="function")return undefined;if(goog.isArrayLike(col)||goog.isString(col)){var rv=[];var l=col.length;for(var i=0;i<l;i++)rv.push(i);return rv}return goog.object.getKeys(col)};
goog.structs.contains=function(col,val){if(typeof col.contains=="function")return col.contains(val);if(typeof col.containsValue=="function")return col.containsValue(val);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.contains(col,val);return goog.object.containsValue(col,val)};goog.structs.isEmpty=function(col){if(typeof col.isEmpty=="function")return col.isEmpty();if(goog.isArrayLike(col)||goog.isString(col))return goog.array.isEmpty(col);return goog.object.isEmpty(col)};
goog.structs.clear=function(col){if(typeof col.clear=="function")col.clear();else if(goog.isArrayLike(col))goog.array.clear(col);else goog.object.clear(col)};
goog.structs.forEach=function(col,f,opt_obj){if(typeof col.forEach=="function")col.forEach(f,opt_obj);else if(goog.isArrayLike(col)||goog.isString(col))goog.array.forEach(col,f,opt_obj);else{var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)f.call(opt_obj,values[i],keys&&keys[i],col)}};
goog.structs.filter=function(col,f,opt_obj){if(typeof col.filter=="function")return col.filter(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.filter(col,f,opt_obj);var rv;var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;if(keys){rv={};for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],keys[i],col))rv[keys[i]]=values[i]}else{rv=[];for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],undefined,col))rv.push(values[i])}return rv};
goog.structs.map=function(col,f,opt_obj){if(typeof col.map=="function")return col.map(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.map(col,f,opt_obj);var rv;var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;if(keys){rv={};for(var i=0;i<l;i++)rv[keys[i]]=f.call(opt_obj,values[i],keys[i],col)}else{rv=[];for(var i=0;i<l;i++)rv[i]=f.call(opt_obj,values[i],undefined,col)}return rv};
goog.structs.some=function(col,f,opt_obj){if(typeof col.some=="function")return col.some(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.some(col,f,opt_obj);var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],keys&&keys[i],col))return true;return false};
goog.structs.every=function(col,f,opt_obj){if(typeof col.every=="function")return col.every(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.every(col,f,opt_obj);var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)if(!f.call(opt_obj,values[i],keys&&keys[i],col))return false;return true};goog.provide("goog.iter");goog.provide("goog.iter.Iterator");goog.provide("goog.iter.StopIteration");goog.require("goog.array");goog.iter.Iterable=goog.typedef;if("StopIteration"in goog.global)goog.iter.StopIteration=goog.global["StopIteration"];else goog.iter.StopIteration=Error("StopIteration");goog.iter.Iterator=function(){};goog.iter.Iterator.prototype.next=function(){throw goog.iter.StopIteration;};goog.iter.Iterator.prototype.__iterator__=function(opt_keys){return this};
goog.iter.toIterator=function(iterable){if(iterable instanceof goog.iter.Iterator)return iterable;if(typeof iterable.__iterator__=="function")return iterable.__iterator__(false);if(goog.isArrayLike(iterable)){var i=0;var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){if(i>=iterable.length)throw goog.iter.StopIteration;if(!(i in iterable)){i++;continue}return iterable[i++]}};return newIter}throw Error("Not implemented");};
goog.iter.forEach=function(iterable,f,opt_obj){if(goog.isArrayLike(iterable))try{goog.array.forEach(iterable,f,opt_obj)}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}else{iterable=goog.iter.toIterator(iterable);try{while(true)f.call(opt_obj,iterable.next(),undefined,iterable)}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}}};
goog.iter.filter=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){var val=iterable.next();if(f.call(opt_obj,val,undefined,iterable))return val}};return newIter};
goog.iter.range=function(startOrStop,opt_stop,opt_step){var start=0;var stop=startOrStop;var step=opt_step||1;if(arguments.length>1){start=startOrStop;stop=opt_stop}if(step==0)throw Error("Range step argument must not be zero");var newIter=new goog.iter.Iterator;newIter.next=function(){if(step>0&&start>=stop||step<0&&start<=stop)throw goog.iter.StopIteration;var rv=start;start+=step;return rv};return newIter};goog.iter.join=function(iterable,deliminator){return goog.iter.toArray(iterable).join(deliminator)};
goog.iter.map=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){var val=iterable.next();return f.call(opt_obj,val,undefined,iterable)}};return newIter};goog.iter.reduce=function(iterable,f,val,opt_obj){var rval=val;goog.iter.forEach(iterable,function(val){rval=f.call(opt_obj,rval,val)});return rval};
goog.iter.some=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);try{while(true)if(f.call(opt_obj,iterable.next(),undefined,iterable))return true}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}return false};goog.iter.every=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);try{while(true)if(!f.call(opt_obj,iterable.next(),undefined,iterable))return false}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}return true};
goog.iter.chain=function(var_args){var args=arguments;var length=args.length;var i=0;var newIter=new goog.iter.Iterator;newIter.next=function(){try{if(i>=length)throw goog.iter.StopIteration;var current=goog.iter.toIterator(args[i]);return current.next()}catch(ex){if(ex!==goog.iter.StopIteration||i>=length)throw ex;else{i++;return this.next()}}};return newIter};
goog.iter.dropWhile=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;var dropping=true;newIter.next=function(){while(true){var val=iterable.next();if(dropping&&f.call(opt_obj,val,undefined,iterable))continue;else dropping=false;return val}};return newIter};
goog.iter.takeWhile=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;var taking=true;newIter.next=function(){while(true)if(taking){var val=iterable.next();if(f.call(opt_obj,val,undefined,iterable))return val;else taking=false}else throw goog.iter.StopIteration;};return newIter};
goog.iter.toArray=function(iterable){if(goog.isArrayLike(iterable))return goog.array.toArray(iterable);iterable=goog.iter.toIterator(iterable);var array=[];goog.iter.forEach(iterable,function(val){array.push(val)});return array};
goog.iter.equals=function(iterable1,iterable2){iterable1=goog.iter.toIterator(iterable1);iterable2=goog.iter.toIterator(iterable2);var b1,b2;try{while(true){b1=b2=false;var val1=iterable1.next();b1=true;var val2=iterable2.next();b2=true;if(val1!=val2)return false}}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;else{if(b1&&!b2)return false;if(!b2)try{val2=iterable2.next();return false}catch(ex1){if(ex1!==goog.iter.StopIteration)throw ex1;return true}}}return false};
goog.iter.nextOrValue=function(iterable,defaultValue){try{return goog.iter.toIterator(iterable).next()}catch(e){if(e!=goog.iter.StopIteration)throw e;return defaultValue}};goog.provide("goog.structs.Map");goog.require("goog.iter.Iterator");goog.require("goog.iter.StopIteration");goog.require("goog.object");goog.require("goog.structs");goog.structs.Map=function(opt_map,var_args){this.map_={};this.keys_=[];var argLength=arguments.length;if(argLength>1){if(argLength%2)throw Error("Uneven number of arguments");for(var i=0;i<argLength;i+=2)this.set(arguments[i],arguments[i+1])}else if(opt_map)this.addAll(opt_map)};goog.structs.Map.prototype.count_=0;
goog.structs.Map.prototype.version_=0;goog.structs.Map.prototype.getCount=function(){return this.count_};goog.structs.Map.prototype.getValues=function(){this.cleanupKeysArray_();var rv=[];for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];rv.push(this.map_[key])}return rv};goog.structs.Map.prototype.getKeys=function(){this.cleanupKeysArray_();return this.keys_.concat()};goog.structs.Map.prototype.containsKey=function(key){return goog.structs.Map.hasKey_(this.map_,key)};
goog.structs.Map.prototype.containsValue=function(val){for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];if(goog.structs.Map.hasKey_(this.map_,key)&&this.map_[key]==val)return true}return false};
goog.structs.Map.prototype.equals=function(otherMap,opt_equalityFn){if(this===otherMap)return true;if(this.count_!=otherMap.getCount())return false;var equalityFn=opt_equalityFn||goog.structs.Map.defaultEquals;this.cleanupKeysArray_();for(var key,i=0;key=this.keys_[i];i++)if(!equalityFn(this.get(key),otherMap.get(key)))return false;return true};goog.structs.Map.defaultEquals=function(a,b){return a===b};goog.structs.Map.prototype.isEmpty=function(){return this.count_==0};
goog.structs.Map.prototype.clear=function(){this.map_={};this.keys_.length=0;this.count_=0;this.version_=0};goog.structs.Map.prototype.remove=function(key){if(goog.structs.Map.hasKey_(this.map_,key)){delete this.map_[key];this.count_--;this.version_++;if(this.keys_.length>2*this.count_)this.cleanupKeysArray_();return true}return false};
goog.structs.Map.prototype.cleanupKeysArray_=function(){if(this.count_!=this.keys_.length){var srcIndex=0;var destIndex=0;while(srcIndex<this.keys_.length){var key=this.keys_[srcIndex];if(goog.structs.Map.hasKey_(this.map_,key))this.keys_[destIndex++]=key;srcIndex++}this.keys_.length=destIndex}if(this.count_!=this.keys_.length){var seen={};var srcIndex=0;var destIndex=0;while(srcIndex<this.keys_.length){var key=this.keys_[srcIndex];if(!goog.structs.Map.hasKey_(seen,key)){this.keys_[destIndex++]=key;
seen[key]=1}srcIndex++}this.keys_.length=destIndex}};goog.structs.Map.prototype.get=function(key,opt_val){if(goog.structs.Map.hasKey_(this.map_,key))return this.map_[key];return opt_val};goog.structs.Map.prototype.set=function(key,value){if(!goog.structs.Map.hasKey_(this.map_,key)){this.count_++;this.keys_.push(key);this.version_++}this.map_[key]=value};
goog.structs.Map.prototype.addAll=function(map){var keys,values;if(map instanceof goog.structs.Map){keys=map.getKeys();values=map.getValues()}else{keys=goog.object.getKeys(map);values=goog.object.getValues(map)}for(var i=0;i<keys.length;i++)this.set(keys[i],values[i])};goog.structs.Map.prototype.clone=function(){return new goog.structs.Map(this)};
goog.structs.Map.prototype.transpose=function(){var transposed=new goog.structs.Map;for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];var value=this.map_[key];transposed.set(value,key)}return transposed};goog.structs.Map.prototype.getKeyIterator=function(){return this.__iterator__(true)};goog.structs.Map.prototype.getValueIterator=function(){return this.__iterator__(false)};
goog.structs.Map.prototype.__iterator__=function(opt_keys){this.cleanupKeysArray_();var i=0;var keys=this.keys_;var map=this.map_;var version=this.version_;var selfObj=this;var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){if(version!=selfObj.version_)throw Error("The map has changed since the iterator was created");if(i>=keys.length)throw goog.iter.StopIteration;var key=keys[i++];return opt_keys?key:map[key]}};return newIter};
goog.structs.Map.hasKey_=function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)};goog.provide("goog.structs.Set");goog.require("goog.structs");goog.require("goog.structs.Map");goog.structs.Set=function(opt_values){this.map_=new goog.structs.Map;if(opt_values)this.addAll(opt_values)};goog.structs.Set.getKey_=function(val){var type=typeof val;if(type=="object"&&val||type=="function")return"o"+goog.getUid(val);else return type.substr(0,1)+val};goog.structs.Set.prototype.getCount=function(){return this.map_.getCount()};
goog.structs.Set.prototype.add=function(element){this.map_.set(goog.structs.Set.getKey_(element),element)};goog.structs.Set.prototype.addAll=function(col){var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)this.add(values[i])};goog.structs.Set.prototype.removeAll=function(col){var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)this.remove(values[i])};goog.structs.Set.prototype.remove=function(element){return this.map_.remove(goog.structs.Set.getKey_(element))};
goog.structs.Set.prototype.clear=function(){this.map_.clear()};goog.structs.Set.prototype.isEmpty=function(){return this.map_.isEmpty()};goog.structs.Set.prototype.contains=function(element){return this.map_.containsKey(goog.structs.Set.getKey_(element))};goog.structs.Set.prototype.containsAll=function(col){return goog.structs.every(col,this.contains,this)};
goog.structs.Set.prototype.intersection=function(col){var result=new goog.structs.Set;var values=goog.structs.getValues(col);for(var i=0;i<values.length;i++){var value=values[i];if(this.contains(value))result.add(value)}return result};goog.structs.Set.prototype.getValues=function(){return this.map_.getValues()};goog.structs.Set.prototype.clone=function(){return new goog.structs.Set(this)};goog.structs.Set.prototype.equals=function(col){return this.getCount()==goog.structs.getCount(col)&&this.isSubsetOf(col)};
goog.structs.Set.prototype.isSubsetOf=function(col){var colCount=goog.structs.getCount(col);if(this.getCount()>colCount)return false;if(!(col instanceof goog.structs.Set)&&colCount>5)col=new goog.structs.Set(col);return goog.structs.every(this,function(value){return goog.structs.contains(col,value)})};goog.structs.Set.prototype.__iterator__=function(opt_keys){return this.map_.__iterator__(false)};goog.provide("kemia.model.Flags");kemia.model.Flags.ISPLACED=0;kemia.model.Flags.VISITED=1;kemia.model.Flags.ISINRING=2;kemia.model.Flags.MAX_FLAG_INDEX=2;goog.provide("kemia.ring.Ring");goog.require("kemia.model.Flags");goog.require("goog.array");goog.require("goog.structs.Map");kemia.ring.Ring=function(_atoms,_bonds){this.atoms=_atoms;this.bonds=_bonds;var avgX=0;var avgY=0;for(var j=0,jl=_atoms.length;j<jl;j++){avgX+=_atoms[j].coord.x;avgY+=_atoms[j].coord.y}this.ringCenter=new goog.math.Coordinate(avgX/_atoms.length,avgY/_atoms.length);this.flags=new Array(kemia.model.Flags.MAX_FLAG_INDEX+1)};
kemia.ring.Ring.prototype.setFlag=function(flag_type,flag_value){this.flags[flag_type]=flag_value};goog.provide("kemia.ring.Hanser");goog.require("goog.structs.Set");goog.require("goog.structs.Set");goog.require("goog.array");goog.require("kemia.ring.Ring");kemia.ring.Hanser=function(){};
kemia.ring.Hanser.findRings=function(_molecule,maxLen){var molecule=_molecule;var atomOnlyRings=[];graph=new kemia.ring.PathGraph(molecule);for(var i=0,il=molecule.countAtoms();i<il;i++){var edges=graph.remove(molecule.getAtom(i),maxLen);for(var j=0;j<edges.length;j++){edge=edges[j];atom_ring=edge.atoms;goog.array.removeAt(atom_ring,atom_ring.length-1);for(var k=0,lk=atom_ring.length;k<lk;k++)atom_ring[k]=molecule.indexOfAtom(atom_ring[k]);atomOnlyRings.push(atom_ring)}}goog.array.sort(atomOnlyRings);
return atomOnlyRings};kemia.ring.Hanser.createRing=function(atoms,molecule){var bonds=new Array;for(var i=0,il=atoms.length-1;i<il;i++){bond=molecule.findBond(atoms[i],atoms[i+1]);if(bond!=null)bonds.push(bond)}goog.array.removeAt(atoms,atoms.length-1);var ring=new kemia.ring.Ring(atoms,bonds);return ring};
kemia.ring.PathGraph=function(molecule){this.edges=new Array;this.atoms=new Array;for(var i=0,il=molecule.countBonds();i<il;i++){bond=molecule.getBond(i);var edge=[bond.source,bond.target];this.edges.push(new kemia.ring.PathEdge(edge))}for(var i=0,il=molecule.countAtoms();i<il;i++)this.atoms.push(molecule.getAtom(i))};
kemia.ring.PathGraph.prototype.remove=function(atom,maxLen){var oldEdges=this.getEdges(atom);result=new Array;for(var i=0,il=oldEdges.length;i<il;i++)if(oldEdges[i].isCycle())result.push(oldEdges[i]);for(var i=0,il=result.length;i<il;i++){if(goog.array.contains(oldEdges,result[i]))goog.array.remove(oldEdges,result[i]);if(goog.array.contains(this.edges,result[i]))goog.array.remove(this.edges,result[i])}newEdges=this.spliceEdges(oldEdges);for(var i=0,il=oldEdges.length;i<il;i++)if(goog.array.contains(this.edges,
oldEdges[i]))goog.array.remove(this.edges,oldEdges[i]);for(var i=0,il=newEdges.length;i<il;i++)if(!goog.array.contains(this.edges,newEdges[i])&&newEdges[i].atoms.length<=maxLen+1)this.edges.push(newEdges[i]);goog.array.remove(this.atoms,atom);return result};
kemia.ring.PathGraph.prototype.getEdges=function(atom){var result=new Array;for(var i=0,il=this.edges.length;i<il;i++){edge=this.edges[i];if(edge.isCycle()){if(goog.array.contains(edge.atoms,atom))result.push(edge)}else{var lastAtomPos=edge.atoms.length-1;if(edge.atoms[0]==atom||edge.atoms[lastAtomPos]==atom)result.push(edge)}}return result};
kemia.ring.PathGraph.prototype.spliceEdges=function(_edges){var result=new Array;for(var i=0,il=_edges.length;i<il;i++)for(var j=i+1;j<il;j++){spliced=_edges[j].splice(_edges[i]);if(spliced!=null)result.push(spliced)}return result};kemia.ring.PathEdge=function(_atoms){this.atoms=_atoms};kemia.ring.PathEdge.prototype.isCycle=function(){var lastAtomPos=this.atoms.length-1;return this.atoms.length>2&&this.atoms[0]==this.atoms[lastAtomPos]};
kemia.ring.PathEdge.prototype.splice=function(other){intersection=this.getIntersection(other.atoms);newAtoms=new Array;for(var i=0,il=this.atoms.length;i<il;i++)newAtoms.push(this.atoms[i]);if(this.atoms[0]==intersection)newAtoms.reverse();if(other.atoms[0]==intersection)for(var i=1,il=other.atoms.length;i<il;i++)newAtoms.push(other.atoms[i]);else for(var i=other.atoms.length-2;i>=0;i--)newAtoms.push(other.atoms[i]);if(!this.isRealPath(newAtoms))return null;return new kemia.ring.PathEdge(newAtoms)};
kemia.ring.PathEdge.prototype.isRealPath=function(atoms){for(var i=1,il=atoms.length-1;i<il;i++)for(var j=1;j<il;j++){if(i==j)continue;if(atoms[i]==atoms[j])return false}return true};
kemia.ring.PathEdge.prototype.getIntersection=function(others){var lastAtomPos=this.atoms.length-1;var lastOtherPos=others.length-1;if(this.atoms[lastAtomPos]==others[0]||this.atoms[lastAtomPos]==others[lastOtherPos])return this.atoms[lastAtomPos];if(this.atoms[0]==others[0]||this.atoms[0]==others[lastOtherPos])return this.atoms[0];throw"Couldn't splice - no intersection";};goog.provide("kemia.ring.SSSR");goog.require("goog.structs.Set");goog.require("goog.array");goog.require("kemia.ring.Ring");
(function(){function deepCopy(arr){var newArray=[];for(var i=0,li=arr.length;i<li;i++){var item=arr[i];if(item instanceof Array)newArray.push(deepCopy(item));else newArray.push(item)}return newArray}function matrixToHTML(matrix){var text="";var n=matrix.length;for(var i=0;i<n;i++){for(var j=0;j<n;j++)text+=JSON.stringify(matrix[i][j])+" ";text+="<br>"}return text}function createEmptyMatrix(n){var matrix=[];for(var i=0;i<n;i++){var row=[];for(var j=0;j<n;j++)row.push(0);matrix.push(row)}return matrix}
function createWeightMatrix(molecule,n){var matrix=[];for(var i=0;i<n;i++){var row=[];for(var j=0;j<n;j++)if(i==j)row.push(0);else if(molecule.findBond(molecule.getAtom(i),molecule.getAtom(j)))row.push(1);else row.push(99999999);matrix.push(row)}return matrix}function createEmptyPIDMatrix(n){var matrix=[];for(var i=0;i<n;i++){var row=[];for(var j=0;j<n;j++)row.push([]);matrix.push(row)}return matrix}function createPIDMatrix(molecule,n){var matrix=[];for(var i=0;i<n;i++){var row=[];for(var j=0;j<n;j++){var beginAtom=
molecule.getAtom(i);var endAtom=molecule.getAtom(j);var bond=molecule.findBond(beginAtom,endAtom);if(bond)row.push([[molecule.indexOfBond(bond)]]);else row.push([])}matrix.push(row)}return matrix}function appendPath(lhs,p1,p2){if(!lhs.length)lhs[0]=p1[0].concat(p2[0]);else lhs.push(p1[0].concat(p2[0]))}function makePIDMatrixes(molecule){var n=molecule.countAtoms();var D=createWeightMatrix(molecule,n);var Pe1=createPIDMatrix(molecule,n);var Pe2=createEmptyPIDMatrix(n);var lastD=D;for(var k=0;k<n;k++)for(var i=
0;i<n;i++)for(var j=0;j<n;j++){var lastPathLength=lastD[i][j];var pathLength=lastD[i][k]+lastD[k][j];var path1=Pe1[i][k];var path2=Pe1[k][j];if(pathLength==1E8)continue;if(lastPathLength>pathLength){if(lastPathLength==pathLength+1)Pe2[i][j]=deepCopy(Pe1[i][j]);else Pe2[i][j]=[];D[i][j]=pathLength;Pe1[i][j]=[path1[0].concat(path2[0])]}else if(lastPathLength==pathLength){if(path1.length&&path2.length)appendPath(Pe1[i][j],path1,path2)}else if(lastPathLength==pathLength-1)appendPath(Pe2[i][j],path1,path2);
else D[i][j]=lastD[i][j]}return{D:D,Pe1:Pe1,Pe2:Pe2}}function sortByCnum(a,b){return a.Cnum-b.Cnum}function makeCandidateSet(D,Pe1,Pe2){var n=D.length;var Cset=[];for(var i=0;i<n;i++)for(var j=0;j<n;j++)if(D[i][j]==0||Pe1[i][j].length==1&&Pe2[i][j].length==0)continue;else{var Cnum;if(Pe2[i][j].length)Cnum=2*(D[i][j]+0.5);else Cnum=2*D[i][j];Cset.push({Cnum:Cnum,Pe1:Pe1[i][j],Pe2:Pe2[i][j]})}Cset.sort(sortByCnum);return Cset}kemia.ring.SSSR.isCandidateInSet=function(C,Csssr,valences,ringCount){for(var i=
0,li=Csssr.length;i<li;i++){var sssr=Csssr[i];if(C.length>=sssr.length){var candidateContainsRing=true;for(var j=0,lj=sssr.length;j<lj;j++)if(!goog.array.contains(C,sssr[j]))candidateContainsRing=false;if(candidateContainsRing)return true}for(j=0,lj=C.length;j<lj;j++)if(goog.array.contains(sssr,C[j]))ringCount[j]++}var isNewRing=false;for(j=0,lj=C.length;j<lj;j++)if(ringCount[C[j]]<valences[C[j]]-1)isNewRing=true;if(isNewRing){for(j=0,lj=C.length;j<lj;j++)ringCount[C[j]]++;return false}return true};
function bondRingToAtomRing(ring,molecule){var atoms=[];for(var i=0,li=ring.length;i<li;i++){var bond=molecule.getBond(ring[i]);var sourceIndex=molecule.indexOfAtom(bond.source);var targetIndex=molecule.indexOfAtom(bond.target);if(!goog.array.contains(atoms,sourceIndex))atoms.push(sourceIndex);if(!goog.array.contains(atoms,targetIndex))atoms.push(targetIndex)}return atoms}function processCandidate(bondIndexes,Csssr,molecule,valences,ringCount){var atomIndexes=bondRingToAtomRing(bondIndexes,molecule);
if(bondIndexes.length!==atomIndexes.length)return;if(!kemia.ring.SSSR.isCandidateInSet(atomIndexes,Csssr,valences,ringCount))Csssr.push(atomIndexes)}function candidateSearch(Cset,nsssr,molecule,D){var Csssr=[];var valences=[];for(var i=0,li=molecule.countAtoms();i<li;i++)valences.push(molecule.getAtom(i).countBonds());var ringCount=goog.array.repeat(0,molecule.countAtoms());for(var i=0,li=Cset.length;i<li;i++){var set=Cset[i];if(set.Cnum%2)for(var j=0,lj=set.Pe2.length;j<lj;j++){var bondIndexes=set.Pe1[0].concat(set.Pe2[j]);
processCandidate(bondIndexes,Csssr,molecule,valences,ringCount);if(Csssr.length==nsssr)return Csssr}else for(var j=0,lj=set.Pe1.length-1;j<lj;j++){var bondIndexes=set.Pe1[j].concat(set.Pe1[j+1]);processCandidate(bondIndexes,Csssr,molecule,valences,ringCount);if(Csssr.length==nsssr)return Csssr}}return Csssr}function sortByPath(atomIndexes,molecule){var pathAtomIndexes=[atomIndexes[0]];var beginAtom=molecule.getAtom(atomIndexes[0]);var l=0;while(atomIndexes.length!=pathAtomIndexes.length){l++;if(l>
1E3)break;for(var i=1,li=atomIndexes.length;i<li;i++){var iAtom=molecule.getAtom(pathAtomIndexes[pathAtomIndexes.length-1]);var jAtom=molecule.getAtom(atomIndexes[i]);if(goog.array.contains(pathAtomIndexes,atomIndexes[i]))continue;if(molecule.findBond(iAtom,jAtom))pathAtomIndexes.push(atomIndexes[i]);else if(molecule.findBond(beginAtom,jAtom))goog.array.insertAt(pathAtomIndexes,atomIndexes[i],0)}}return pathAtomIndexes}kemia.ring.SSSR.findRings=function(molecule){var nsssr=molecule.countBonds()-molecule.countAtoms()+
1;if(!nsssr)return[];var matrices=makePIDMatrixes(molecule);var Cset=makeCandidateSet(matrices.D,matrices.Pe1,matrices.Pe2);var indexes=candidateSearch(Cset,nsssr,molecule,matrices.D);for(var i=0,li=indexes.length;i<li;i++)indexes[i]=sortByPath(indexes[i],molecule);return indexes}})();goog.provide("kemia.ring.RingFinder");goog.require("kemia.ring.Hanser");goog.require("kemia.ring.SSSR");goog.require("goog.structs.Set");goog.require("goog.structs.Set");goog.require("goog.array");goog.require("kemia.ring.Ring");
(function(){kemia.ring.RingFinder={};function createRing(atomIndexes,molecule){var atoms=[];for(var i=0,li=atomIndexes.length;i<li;i++)atoms.push(molecule.getAtom(atomIndexes[i]));var bonds=[];for(var i=0,il=atoms.length-1;i<il;i++){bond=molecule.findBond(atoms[i],atoms[i+1]);if(bond!=null)bonds.push(bond)}bond=molecule.findBond(atoms[0],atoms[atoms.length-1]);if(bond!=null)bonds.push(bond);var ring=new kemia.ring.Ring(atoms,bonds);return ring}function isCandidateInSet(C,Csssr,valences,ringCount){for(var i=
0,li=Csssr.length;i<li;i++){var sssr=Csssr[i];if(C.length>=sssr.length){var candidateContainsRing=true;for(var j=0,lj=sssr.length;j<lj;j++)if(!goog.array.contains(C,sssr[j]))candidateContainsRing=false;if(candidateContainsRing)return true}for(j=0,lj=C.length;j<lj;j++)if(goog.array.contains(sssr,C[j]))ringCount[j]++}var isNewRing=false;for(j=0,lj=C.length;j<lj;j++)if(ringCount[C[j]]<valences[C[j]]-1)isNewRing=true;if(isNewRing){for(j=0,lj=C.length;j<lj;j++)ringCount[C[j]]++;return false}return true}
function verifySSSR(sssr,nsssr,molecule){var Csssr=[];var valences=[];for(var i=0,li=molecule.countAtoms();i<li;i++)valences.push(molecule.getAtom(i).countBonds());var ringCount=goog.array.repeat(0,molecule.countAtoms());for(var i=0,li=sssr.length;i<li;i++){var ring=sssr[i];if(!kemia.ring.SSSR.isCandidateInSet(ring,Csssr,valences,ringCount)){Csssr.push(ring);if(Csssr.length==nsssr)return Csssr}}return Csssr}function detectRingAtoms(molecule){var n=molecule.countAtoms();if(!n)return;var visitedAtoms=
goog.array.repeat(false,n);var visitedBonds=goog.array.repeat(false,n);var queue=[];var startAtom=molecule.atoms[0];startAtom.depth=0;queue.push(startAtom);visitedAtoms[0]=true;while(true){if(!queue.length)break;var atom=queue[0];goog.array.removeAt(queue,0);var bonds=atom.bonds.getValues();for(var i=0,li=bonds.length;i<li;i++){var bond=bonds[i];var bondIndex=bond.index;if(visitedBonds[bondIndex])continue;visitedBonds[bondIndex]=true;var neighbor=bond.otherAtom(atom);var neighborIndex=neighbor.index;
if(visitedAtoms[neighborIndex]){var previous=[],depth;if(atom.depth==neighbor.depth){previous.push(atom);previous.push(neighbor);depth=atom.depth}else{neighbor.isInCycle=true;var nbrNeighbors=neighbor.getNeighbors();for(var j=0,lj=nbrNeighbors.length;j<lj;j++){var nbrNeighbor=nbrNeighbors[j];if(nbrNeighbor.depth==neighbor.depth-1)previous.push(nbrNeighbor)}depth=atom.depth}while(true){previous[0].isInCycle=true;previous[1].isInCycle=true;depth--;var prevNeighbors1=previous[0].getNeighbors();for(var j=
0,lj=prevNeighbors1.length;j<lj;j++)if(prevNeighbors1[j].depth==depth){previous[0]=prevNeighbors1[j];break}var prevNeighbors2=previous[1].getNeighbors();for(var j=0,lj=prevNeighbors2.length;j<lj;j++)if(prevNeighbors2[j].depth==depth){previous[1]=prevNeighbors2[j];break}if(previous[0]==previous[1]){previous[0].isInCycle=true;break}}}else{neighbor.depth=atom.depth+1;visitedAtoms[neighborIndex]=true;queue.push(neighbor)}}}}function createRingSystems(molecule){var rings=[];var n=molecule.countAtoms();
var visitedAtoms=goog.array.repeat(false,n);var visitedBonds=goog.array.repeat(false,n);var indexMap=goog.array.repeat(-1,n);for(var k=0,lk=molecule.countAtoms();k<lk;k++){var startAtom=molecule.atoms[k];if(visitedAtoms[startAtom.index])continue;if(!startAtom.isInCycle)continue;var ringSystem=new kemia.model.Molecule;var queue=[];queue.push(startAtom);visitedAtoms[0]=true;var newAtom=new kemia.model.Atom;newAtom.index2=startAtom.index;indexMap[startAtom.index]=0;ringSystem.addAtom(newAtom);while(true){if(!queue.length)break;
var atom=queue[0];goog.array.removeAt(queue,0);var bonds=atom.bonds.getValues();for(var i=0,li=bonds.length;i<li;i++){var bond=bonds[i];var bondIndex=bond.index;if(visitedBonds[bondIndex])continue;visitedBonds[bondIndex]=true;var neighbor=bond.otherAtom(atom);var neighborIndex=neighbor.index;if(!neighbor.isInCycle)continue;if(visitedAtoms[neighborIndex]){var closureBond=molecule.findBond(atom,neighbor);var newBond=new kemia.model.Bond(ringSystem.atoms[indexMap[atom.index]],ringSystem.atoms[indexMap[neighbor.index]]);
newBond.index2=closureBond.index;ringSystem.addBond(newBond)}else{visitedAtoms[neighborIndex]=true;queue.push(neighbor);newAtom=new kemia.model.Atom;newAtom.index2=neighbor.index;indexMap[neighbor.index]=ringSystem.atoms.length;ringSystem.addAtom(newAtom);var bond=molecule.findBond(atom,neighbor);var newBond=new kemia.model.Bond(ringSystem.atoms[indexMap[atom.index]],newAtom);newBond.index2=bond.index;ringSystem.addBond(newBond)}}}for(var i=0,li=ringSystem.atoms.length;i<li;i++)ringSystem.atoms[i].index=
i;for(var i=0,li=ringSystem.bonds.length;i<li;i++)ringSystem.bonds[i].index=i;var nsssr=ringSystem.bonds.length-ringSystem.atoms.length+1;var sssr;var hanser=kemia.ring.Hanser.findRings(ringSystem,6);if(hanser.length>=nsssr){sssr=verifySSSR(hanser,nsssr,ringSystem);if(sssr.length<nsssr)sssr=kemia.ring.SSSR.findRings(ringSystem)}else sssr=kemia.ring.SSSR.findRings(ringSystem);for(i=0,li=sssr.length;i<li;i++){var ring=sssr[i];for(var j=0,lj=ring.length;j<lj;j++)ring[j]=ringSystem.atoms[ring[j]].index2}for(var i=
0,il=sssr.length;i<il;i++)rings.push(createRing(sssr[i],molecule))}return rings}kemia.ring.RingFinder.findRings=function(molecule){var nsssr=molecule.countBonds()-molecule.countAtoms()+molecule.fragmentCount;if(!nsssr)return[];for(var i=0,li=molecule.atoms.length;i<li;i++)molecule.atoms[i].index=i;for(var i=0,li=molecule.bonds.length;i<li;i++)molecule.bonds[i].index=i;detectRingAtoms(molecule);return createRingSystems(molecule)}})();goog.provide("kemia.query.DFSMapper");goog.require("kemia.ring.RingFinder");goog.require("goog.structs.Map");
(function(){function simpleSort(a,b){return a-b}kemia.query.DFSMapper=function(query){var Type={MapFirst:0,MapUnique:1,MapAll:2};this.query=query;function getStartAtom(query){return query.getAtom(0)}function State(type,query,queried){this.type=type;this.query=query;this.queried=queried;this.sssr=queried.getRings();this.queryPath=[];this.queriedPath=[];this.candidates=[]}function checkForMap(state,maps){if(state.queryPath.length===state.query.countAtoms()){var map=new goog.structs.Map;for(var k=0,
kl=state.queryPath.length;k<kl;k++)map.set(state.query.indexOfAtom(state.queryPath[k]),state.queried.indexOfAtom(state.queriedPath[k]));if(state.type===Type.MapUnique){var values=map.getValues();values.sort(simpleSort);var isUnique=true;for(k=0,kl=maps.length;k<kl;k++){var kValues=maps[k].getValues();kValues.sort(simpleSort);if(goog.array.equals(values,kValues))isUnique=false}if(isUnique)maps.push(map)}else maps.push(map);if(state.type===Type.MapFirst)return}}function matchCandidate(state,queryAtom,
queriedAtom,queryNbr,queriedNbr,maps){if(goog.array.indexOf(state.queryPath,queryNbr)!==-1)return false;if(goog.array.indexOf(state.queriedPath,queriedNbr)!==-1)return false;if(!queryNbr.matches(queriedNbr,state.queried,state.sssr))return false;var queryBond=state.query.findBond(queryAtom,queryNbr);var queriedBond=state.queried.findBond(queriedAtom,queriedNbr);if(!queryBond.matches(queriedBond,state.queried,state.sssr))return false;state.queryPath.push(queryNbr);state.queriedPath.push(queriedNbr);
checkForMap(state,maps);return true}function DFS(state,queryAtom,queriedAtom,maps){var queryNbrs=queryAtom.getNeighbors();var queriedNbrs=queriedAtom.getNeighbors();var candidates=[];for(var i=0,li=queryNbrs.length;i<li;i++){var queryNbr=queryNbrs[i];for(var j=0,lj=queriedNbrs.length;j<lj;j++){var queriedNbr=queriedNbrs[j];candidates.push({queryAtom:queryAtom,queryNbr:queryNbr,queriedAtom:queriedAtom,queriedNbr:queriedNbr})}}if(state.candidates.length)state.candidates.push(state.candidates[state.candidates.length-
1].concat(candidates));else state.candidates.push(candidates);while(state.candidates[state.candidates.length-1].length){var candidate=state.candidates[state.candidates.length-1].pop();if(matchCandidate(state,candidate.queryAtom,candidate.queriedAtom,candidate.queryNbr,candidate.queriedNbr,maps)){DFS(state,candidate.queryNbr,candidate.queriedNbr,maps);state.queryPath.pop();state.queriedPath.pop();state.candidates.pop()}}}function mapNext(i,type,query,queryAtom,queried,maps,callback){var state=new State(type,
query,queried);var queriedAtom=queried.getAtom(i);if(queryAtom.matches(queriedAtom)){state.queryPath.push(queryAtom);state.queriedPath.push(queriedAtom);DFS(state,queryAtom,queriedAtom,maps)}i++;if(i<queried.countAtoms()){var nextBitOfWork=function(){mapNext(i,type,query,queryAtom,queried,maps,callback)};setTimeout(nextBitOfWork,0)}else callback(maps)}this.mapAll=function(queried){var maps=[];var queryAtom=getStartAtom(this.query);for(var i=0,li=queried.countAtoms();i<li;i++){var state=new State(Type.MapAll,
this.query,queried);var queriedAtom=queried.getAtom(i);if(!queryAtom.matches(queriedAtom))continue;if(this.query.countAtoms()>1){state.queryPath.push(queryAtom);state.queriedPath.push(queriedAtom);DFS(state,queryAtom,queriedAtom,maps)}else{var map=new goog.structs.Map;map.set(state.query.indexOfAtom(queryAtom),state.queried.indexOfAtom(queriedAtom));maps.push(map)}}return maps};this.mapAllCallback=function(queried,callback){var maps=[];var queryAtom=getStartAtom(this.query);var i=0;mapNext(i,Type.MapAll,
this.query,queryAtom,queried,maps,callback)};this.mapUnique=function(queried){var maps=[];var queryAtom=getStartAtom(this.query);for(var i=0,li=queried.countAtoms();i<li;i++){var state=new State(Type.MapUnique,this.query,queried);var queriedAtom=queried.getAtom(i);if(!queryAtom.matches(queriedAtom))continue;if(this.query.countAtoms()>1){state.queryPath.push(queryAtom);state.queriedPath.push(queriedAtom);DFS(state,queryAtom,queriedAtom,maps)}else{var map=new goog.structs.Map;map.set(state.query.indexOfAtom(queryAtom),
state.queried.indexOfAtom(queriedAtom));maps.push(map)}}return maps};this.mapUniqueCallback=function(queried,callback){var maps=[];var queryAtom=getStartAtom(this.query);var i=0;mapNext(i,Type.MapUnique,this.query,queryAtom,queried,maps,callback)};this.mapFirst=function(queried){var maps=[];var queryAtom=getStartAtom(this.query);for(var i=0,li=queried.countAtoms();i<li;i++){var state=new State(Type.MapFirst,this.query,queried);var queriedAtom=queried.getAtom(i);if(!queryAtom.matches(queriedAtom))continue;
if(this.query.countAtoms()>1){state.queryPath.push(queryAtom);state.queriedPath.push(queriedAtom);DFS(state,queryAtom,queriedAtom,maps)}else{var map=new goog.structs.Map;map.set(state.query.indexOfAtom(queryAtom),state.queried.indexOfAtom(queriedAtom));return map}if(maps.length)return maps[0]}return new goog.structs.Map}}})();goog.provide("kemia.resource.Covalence");kemia.resource.Covalence={C:4,Si:4,N:3,P:3,O:2,S:2,H:1};goog.provide("goog.math.Coordinate");goog.math.Coordinate=function(opt_x,opt_y){this.x=goog.isDef(opt_x)?opt_x:0;this.y=goog.isDef(opt_y)?opt_y:0};goog.math.Coordinate.prototype.clone=function(){return new goog.math.Coordinate(this.x,this.y)};if(goog.DEBUG)goog.math.Coordinate.prototype.toString=function(){return"("+this.x+", "+this.y+")"};goog.math.Coordinate.equals=function(a,b){if(a==b)return true;if(!a||!b)return false;return a.x==b.x&&a.y==b.y};
goog.math.Coordinate.distance=function(a,b){var dx=a.x-b.x;var dy=a.y-b.y;return Math.sqrt(dx*dx+dy*dy)};goog.math.Coordinate.squaredDistance=function(a,b){var dx=a.x-b.x;var dy=a.y-b.y;return dx*dx+dy*dy};goog.math.Coordinate.difference=function(a,b){return new goog.math.Coordinate(a.x-b.x,a.y-b.y)};goog.math.Coordinate.sum=function(a,b){return new goog.math.Coordinate(a.x+b.x,a.y+b.y)};goog.provide("kemia.model.Atom");goog.provide("kemia.model.Atom.Hybridizations");goog.require("kemia.model.Flags");goog.require("kemia.resource.Covalence");goog.require("goog.structs.Set");goog.require("goog.math.Coordinate");
kemia.model.Atom=function(symbol,x,y,opt_charge,opt_aromatic,opt_isotope){this.symbol=symbol;this.coord=new goog.math.Coordinate(x,y);this.bonds=new goog.structs.Set;this.charge=goog.isDef(opt_charge)?opt_charge:0;this.isotope=goog.isDef(opt_isotope)?opt_isotope:0;this.aromatic=goog.isDef(opt_aromatic)?opt_aromatic:false;this.hybridization=null;this.flags=new Array(kemia.model.Flags.MAX_FLAG_INDEX+1)};kemia.model.Atom.prototype.countBonds=function(){return this.bonds.getCount()};
kemia.model.Atom.prototype.hydrogenCount=function(){var cov=kemia.resource.Covalence[this.symbol];var totalBondOrder=goog.array.reduce(this.bonds.getValues(),function(r,v){return r+v.order},0);var hydrogenCount=0;if(cov)hydrogenCount=cov-totalBondOrder+this.charge;return hydrogenCount};kemia.model.Atom.prototype.getNeighbors=function(){var bonds=this.bonds.getValues();var nbrs=[];for(var i=0,li=bonds.length;i<li;i++)nbrs.push(bonds[i].otherAtom(this));return nbrs};
kemia.model.Atom.prototype.clone=function(){return new kemia.model.Atom(this.symbol,this.coord.x,this.coord.y,this.charge,this.aromatic,this.isotope)};kemia.model.Atom.Hybridizations={S:0,SP1:1,SP2:2,SP3:3,PLANAR3:4,SP3D1:5,SP3D2:6,SP3D3:7,SP3D4:8,SP3D5:9};kemia.model.Atom.prototype.setFlag=function(flag_type,flag_value){this.flags[flag_type]=flag_value};goog.provide("kemia.model.Molecule");goog.require("goog.array");goog.require("kemia.ring.RingFinder");goog.require("kemia.model.Atom");kemia.model.Molecule=function(opt_name){this.bonds=[];this.atoms=[];this.name=opt_name?opt_name:"";this.sssr=[];this.mustRecalcSSSR=true;this.fragments=[];this.fragmentCount=0};
kemia.model.Molecule.prototype.addBond=function(bond){var sourceIndex=this.indexOfAtom(bond.source);var targetIndex=this.indexOfAtom(bond.target);if(this.fragments[sourceIndex]!=this.fragments[targetIndex]){var before,after;if(this.fragments[sourceIndex]<this.fragments[targetIndex]){before=this.fragments[sourceIndex];after=this.fragments[targetIndex]}else{after=this.fragments[sourceIndex];before=this.fragments[targetIndex]}this.fragmentCount--;for(var i=0,li=this.atoms.length;i<li;i++)if(this.fragments[i]==
before)this.fragments[i]=after}this.bonds.push(bond);bond.source.bonds.add(bond);bond.target.bonds.add(bond);bond.molecule=this};kemia.model.Molecule.prototype.getAtom=function(id){return this.atoms[id]};kemia.model.Molecule.prototype.getBond=function(id){return this.bonds[id]};kemia.model.Molecule.prototype.findBond=function(atom1,atom2){var bonds=atom1.bonds.getValues();for(var i=0,li=bonds.length;i<li;i++){var bond=bonds[i];if(bond.otherAtom(atom1)==atom2)return bond}return null};
kemia.model.Molecule.prototype.indexOfAtom=function(atom){return goog.array.indexOf(this.atoms,atom)};kemia.model.Molecule.prototype.indexOfBond=function(bond){return goog.array.indexOf(this.bonds,bond)};
kemia.model.Molecule.prototype.removeAtom=function(atomOrId){var atom;if(atomOrId.constructor==Number)atom=this.atoms[atomOrId];else if(atomOrId.constructor==kemia.model.Atom)atom=atomOrId;var neighborBonds=atom.bonds.getValues();var molBonds=this.bonds;goog.array.forEach(neighborBonds,function(element,index,array){goog.array.remove(molBonds,element)});atom.bonds.clear();goog.array.remove(this.atoms,atom);atom.molecule=undefined};
kemia.model.Molecule.prototype.removeBond=function(bondOrId){var bond;if(bondOrId.constructor==Number)bond=this.bonds[bondOrId];else bond=bondOrId;bond.source.bonds.remove(bond);bond.target.bonds.remove(bond);if(bond.source.bonds.length==0){goog.array.remove(this.atoms,bond.source);bond.source.molecule=undefined}if(bond.target.bonds.length==0){goog.array.remove(this.atoms,bond.target);bond.target.molecule=undefined}goog.array.remove(this.bonds,bond);bond.molecule=undefined;bond.source=undefined;bond.target=
undefined};kemia.model.Molecule.prototype.countAtoms=function(){return this.atoms.length};kemia.model.Molecule.prototype.countBonds=function(){return this.bonds.length};kemia.model.Molecule.prototype.addAtom=function(atom){var index=this.atoms.length;this.fragmentCount++;this.fragments[index]=this.fragmentCount;this.atoms.push(atom);atom.molecule=this};kemia.model.Molecule.prototype.getRings=function(){if(this.mustRecalcSSSR){this.mustRecalcSSSR=false;this.sssr=kemia.ring.RingFinder.findRings(this)}return this.sssr};
kemia.model.Molecule.prototype.isAtomInRing=function(atom_){rings=this.getRings();for(r=0,ringCount=rings.length;r<ringCount;r++)for(a=0,atomCount=rings[r].atoms.length;a<atomCount;a++)if(atom_==rings[r].atoms[a])return true;return false};kemia.model.Molecule.prototype.isBondInRing=function(bond_){rings=this.getRings();for(r=0,ringCount=rings.length;r<ringCount;r++)for(b=0,bondCount=rings[r].bonds.length;b<bondCount;b++)if(bond_==rings[r].bonds[b])return true;return false};
kemia.model.Molecule.prototype.clone=function(){var mol=new kemia.model.Molecule(this.name);goog.array.forEach(this.atoms,function(atom){mol.addAtom(atom)});goog.array.forEach(this.bonds,function(bond){mol.addBond(bond)});return mol};
kemia.model.Molecule.prototype.getFragments=function(){var mol=this.clone();if(mol.fragmentCount==1)return[mol];var fragments=new goog.structs.Map;goog.array.forEach(mol.atoms,function(atom){var frag=mol.fragments[mol.indexOfAtom(atom)];if(fragments.containsKey(frag)==false)fragments.set(frag,new kemia.model.Molecule);fragments.get(frag).addAtom(atom)});goog.array.forEach(mol.bonds,function(bond){var frag=mol.fragments[mol.indexOfAtom(bond.source)];fragments.get(frag).addBond(bond)});return fragments.getValues()};
kemia.model.Molecule.prototype.getConnectedBondsList=function(atom){bondsList=new Array;bondCount=this.bonds.length;for(i=0;i<bondCount;i++)if(this.bonds[i].source==atom||this.bonds[i].target==atom)bondsList.push(this.bonds[i]);return bondsList};kemia.model.Molecule.prototype.toString=function(){return goog.array.map(this.atoms,function(atom){return atom.symbol+atom.index+atom.coord.toString()})};
kemia.model.Molecule.prototype.getCenter=function(){var box=this.getBoundingBox();return new goog.math.Coordinate((box.left+box.right)/2,(box.top+box.bottom)/2)};kemia.model.Molecule.prototype.getBoundingBox=function(){return goog.math.Box.boundingBox.apply(null,goog.array.map(this.atoms,function(a){return a.coord}))};goog.provide("kemia.model.Bond");goog.require("kemia.model.Atom");kemia.model.Bond=function(source,target,opt_order,opt_stereo,opt_aromatic,opt_molecule){this.source=source;this.target=target;this.order=goog.isDef(opt_order)?opt_order:kemia.model.Bond.ORDER.SINGLE;this.stereo=goog.isDef(opt_stereo)?opt_stereo:kemia.model.Bond.STEREO.NOT_STEREO;this.aromatic=goog.isDef(opt_aromatic)?opt_aromatic:false;this.molecule=goog.isDef(opt_molecule)?opt_molecule:null};
kemia.model.Bond.prototype.otherAtom=function(atom){if(atom===this.source)return this.target;if(atom===this.target)return this.source;return null};kemia.model.Bond.prototype.clone=function(){return new kemia.model.Bond(this.source,this.target,this.order,this.stereo,this.aromatic,this.molecule)};kemia.model.Bond.prototype.deepClone=function(){return new kemia.model.Bond(this.source.clone(),this.target.clone(),this.order,this.stereo,this.aromatic,this.molecule)};
kemia.model.Bond.ORDER={SINGLE:1,DOUBLE:2,TRIPLE:3,QUADRUPLE:4};kemia.model.Bond.STEREO={NOT_STEREO:10,UP:11,UP_OR_DOWN:12,DOWN:13};goog.provide("goog.math.Box");goog.require("goog.math.Coordinate");goog.math.Box=function(top,right,bottom,left){this.top=top;this.right=right;this.bottom=bottom;this.left=left};
goog.math.Box.boundingBox=function(var_args){var box=new goog.math.Box(arguments[0].y,arguments[0].x,arguments[0].y,arguments[0].x);for(var i=1;i<arguments.length;i++){var coord=arguments[i];box.top=Math.min(box.top,coord.y);box.right=Math.max(box.right,coord.x);box.bottom=Math.max(box.bottom,coord.y);box.left=Math.min(box.left,coord.x)}return box};goog.math.Box.prototype.clone=function(){return new goog.math.Box(this.top,this.right,this.bottom,this.left)};
if(goog.DEBUG)goog.math.Box.prototype.toString=function(){return"("+this.top+"t, "+this.right+"r, "+this.bottom+"b, "+this.left+"l)"};goog.math.Box.prototype.contains=function(other){return goog.math.Box.contains(this,other)};goog.math.Box.prototype.expand=function(top,opt_right,opt_bottom,opt_left){if(goog.isObject(top)){this.top-=top.top;this.right+=top.right;this.bottom+=top.bottom;this.left-=top.left}else{this.top-=top;this.right+=opt_right;this.bottom+=opt_bottom;this.left-=opt_left}return this};
goog.math.Box.prototype.expandToInclude=function(box){this.left=Math.min(this.left,box.left);this.top=Math.min(this.top,box.top);this.right=Math.max(this.right,box.right);this.bottom=Math.max(this.bottom,box.bottom)};goog.math.Box.equals=function(a,b){if(a==b)return true;if(!a||!b)return false;return a.top==b.top&&a.right==b.right&&a.bottom==b.bottom&&a.left==b.left};
goog.math.Box.contains=function(box,other){if(!box||!other)return false;if(other instanceof goog.math.Box)return other.left>=box.left&&other.right<=box.right&&other.top>=box.top&&other.bottom<=box.bottom;return other.x>=box.left&&other.x<=box.right&&other.y>=box.top&&other.y<=box.bottom};
goog.math.Box.distance=function(box,coord){if(coord.x>=box.left&&coord.x<=box.right){if(coord.y>=box.top&&coord.y<=box.bottom)return 0;return coord.y<box.top?box.top-coord.y:coord.y-box.bottom}if(coord.y>=box.top&&coord.y<=box.bottom)return coord.x<box.left?box.left-coord.x:coord.x-box.right;return goog.math.Coordinate.distance(coord,new goog.math.Coordinate(coord.x<box.left?box.left:box.right,coord.y<box.top?box.top:box.bottom))};
goog.math.Box.intersects=function(a,b){return a.left<=b.right&&b.left<=a.right&&a.top<=b.bottom&&b.top<=a.bottom};goog.provide("goog.math.Size");goog.math.Size=function(width,height){this.width=width;this.height=height};goog.math.Size.equals=function(a,b){if(a==b)return true;if(!a||!b)return false;return a.width==b.width&&a.height==b.height};goog.math.Size.prototype.clone=function(){return new goog.math.Size(this.width,this.height)};if(goog.DEBUG)goog.math.Size.prototype.toString=function(){return"("+this.width+" x "+this.height+")"};goog.math.Size.prototype.getLongest=function(){return Math.max(this.width,this.height)};
goog.math.Size.prototype.getShortest=function(){return Math.min(this.width,this.height)};goog.math.Size.prototype.area=function(){return this.width*this.height};goog.math.Size.prototype.aspectRatio=function(){return this.width/this.height};goog.math.Size.prototype.isEmpty=function(){return!this.area()};goog.math.Size.prototype.ceil=function(){this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};
goog.math.Size.prototype.fitsInside=function(target){return this.width<=target.width&&this.height<=target.height};goog.math.Size.prototype.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};goog.math.Size.prototype.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};goog.math.Size.prototype.scale=function(s){this.width*=s;this.height*=s;return this};
goog.math.Size.prototype.scaleToFit=function(target){var s=this.aspectRatio()>target.aspectRatio()?target.width/this.width:target.height/this.height;return this.scale(s)};goog.provide("goog.math.Rect");goog.require("goog.math.Box");goog.require("goog.math.Size");goog.math.Rect=function(x,y,w,h){this.left=x;this.top=y;this.width=w;this.height=h};goog.math.Rect.prototype.clone=function(){return new goog.math.Rect(this.left,this.top,this.width,this.height)};goog.math.Rect.prototype.toBox=function(){var right=this.left+this.width;var bottom=this.top+this.height;return new goog.math.Box(this.top,right,bottom,this.left)};
goog.math.Rect.createFromBox=function(box){return new goog.math.Rect(box.left,box.top,box.right-box.left,box.bottom-box.top)};if(goog.DEBUG)goog.math.Rect.prototype.toString=function(){return"("+this.left+", "+this.top+" - "+this.width+"w x "+this.height+"h)"};goog.math.Rect.equals=function(a,b){if(a==b)return true;if(!a||!b)return false;return a.left==b.left&&a.width==b.width&&a.top==b.top&&a.height==b.height};
goog.math.Rect.prototype.intersection=function(rect){var x0=Math.max(this.left,rect.left);var x1=Math.min(this.left+this.width,rect.left+rect.width);if(x0<=x1){var y0=Math.max(this.top,rect.top);var y1=Math.min(this.top+this.height,rect.top+rect.height);if(y0<=y1){this.left=x0;this.top=y0;this.width=x1-x0;this.height=y1-y0;return true}}return false};
goog.math.Rect.intersection=function(a,b){var x0=Math.max(a.left,b.left);var x1=Math.min(a.left+a.width,b.left+b.width);if(x0<=x1){var y0=Math.max(a.top,b.top);var y1=Math.min(a.top+a.height,b.top+b.height);if(y0<=y1)return new goog.math.Rect(x0,y0,x1-x0,y1-y0)}return null};goog.math.Rect.intersects=function(a,b){return a.left<=b.left+b.width&&b.left<=a.left+a.width&&a.top<=b.top+b.height&&b.top<=a.top+a.height};
goog.math.Rect.prototype.intersects=function(rect){return goog.math.Rect.intersects(this,rect)};
goog.math.Rect.difference=function(a,b){var intersection=goog.math.Rect.intersection(a,b);if(!intersection||!intersection.height||!intersection.width)return[a.clone()];var result=[];var top=a.top;var height=a.height;var ar=a.left+a.width;var ab=a.top+a.height;var br=b.left+b.width;var bb=b.top+b.height;if(b.top>a.top){result.push(new goog.math.Rect(a.left,a.top,a.width,b.top-a.top));top=b.top;height-=b.top-a.top}if(bb<ab){result.push(new goog.math.Rect(a.left,bb,a.width,ab-bb));height=bb-top}if(b.left>
a.left)result.push(new goog.math.Rect(a.left,top,b.left-a.left,height));if(br<ar)result.push(new goog.math.Rect(br,top,ar-br,height));return result};goog.math.Rect.prototype.difference=function(rect){return goog.math.Rect.difference(this,rect)};
goog.math.Rect.prototype.boundingRect=function(rect){var right=Math.max(this.left+this.width,rect.left+rect.width);var bottom=Math.max(this.top+this.height,rect.top+rect.height);this.left=Math.min(this.left,rect.left);this.top=Math.min(this.top,rect.top);this.width=right-this.left;this.height=bottom-this.top};goog.math.Rect.boundingRect=function(a,b){if(!a||!b)return null;var clone=a.clone();clone.boundingRect(b);return clone};
goog.math.Rect.prototype.contains=function(another){if(another instanceof goog.math.Rect)return this.left<=another.left&&this.left+this.width>=another.left+another.width&&this.top<=another.top&&this.top+this.height>=another.top+another.height;else return another.x>=this.left&&another.x<=this.left+this.width&&another.y>=this.top&&another.y<=this.top+this.height};goog.math.Rect.prototype.getSize=function(){return new goog.math.Size(this.width,this.height)};goog.provide("goog.string");goog.provide("goog.string.Unicode");goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=function(str,prefix){return str.lastIndexOf(prefix,0)==0};goog.string.endsWith=function(str,suffix){var l=str.length-suffix.length;return l>=0&&str.indexOf(suffix,l)==l};goog.string.caseInsensitiveStartsWith=function(str,prefix){return goog.string.caseInsensitiveCompare(prefix,str.substr(0,prefix.length))==0};
goog.string.caseInsensitiveEndsWith=function(str,suffix){return goog.string.caseInsensitiveCompare(suffix,str.substr(str.length-suffix.length,suffix.length))==0};goog.string.subs=function(str,var_args){for(var i=1;i<arguments.length;i++){var replacement=String(arguments[i]).replace(/\$/g,"$$$$");str=str.replace(/\%s/,replacement)}return str};goog.string.collapseWhitespace=function(str){return str.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmpty=function(str){return/^[\s\xa0]*$/.test(str)};
goog.string.isEmptySafe=function(str){return goog.string.isEmpty(goog.string.makeSafe(str))};goog.string.isBreakingWhitespace=function(str){return!/[^\t\n\r ]/.test(str)};goog.string.isAlpha=function(str){return!/[^a-zA-Z]/.test(str)};goog.string.isNumeric=function(str){return!/[^0-9]/.test(str)};goog.string.isAlphaNumeric=function(str){return!/[^a-zA-Z0-9]/.test(str)};goog.string.isSpace=function(ch){return ch==" "};
goog.string.isUnicodeChar=function(ch){return ch.length==1&&ch>=" "&&ch<="~"||ch>="\u0080"&&ch<="\ufffd"};goog.string.stripNewlines=function(str){return str.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(str){return str.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(str){return str.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(str){return str.replace(/\xa0|[ \t]+/g," ")};
goog.string.trim=function(str){return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")};goog.string.trimLeft=function(str){return str.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(str){return str.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=function(str1,str2){var test1=String(str1).toLowerCase();var test2=String(str2).toLowerCase();if(test1<test2)return-1;else if(test1==test2)return 0;else return 1};goog.string.numerateCompareRegExp_=/(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare=function(str1,str2){if(str1==str2)return 0;if(!str1)return-1;if(!str2)return 1;var tokens1=str1.toLowerCase().match(goog.string.numerateCompareRegExp_);var tokens2=str2.toLowerCase().match(goog.string.numerateCompareRegExp_);var count=Math.min(tokens1.length,tokens2.length);for(var i=0;i<count;i++){var a=tokens1[i];var b=tokens2[i];if(a!=b){var num1=parseInt(a,10);if(!isNaN(num1)){var num2=parseInt(b,10);if(!isNaN(num2)&&num1-num2)return num1-num2}return a<b?-1:1}}if(tokens1.length!=
tokens2.length)return tokens1.length-tokens2.length;return str1<str2?-1:1};goog.string.encodeUriRegExp_=/^[a-zA-Z0-9\-_.!~*'()]*$/;goog.string.urlEncode=function(str){str=String(str);if(!goog.string.encodeUriRegExp_.test(str))return encodeURIComponent(str);return str};goog.string.urlDecode=function(str){return decodeURIComponent(str.replace(/\+/g," "))};goog.string.newLineToBr=function(str,opt_xml){return str.replace(/(\r\n|\r|\n)/g,opt_xml?"<br />":"<br>")};
goog.string.htmlEscape=function(str,opt_isLikelyToContainHtmlChars){if(opt_isLikelyToContainHtmlChars)return str.replace(goog.string.amperRe_,"&amp;").replace(goog.string.ltRe_,"&lt;").replace(goog.string.gtRe_,"&gt;").replace(goog.string.quotRe_,"&quot;");else{if(!goog.string.allRe_.test(str))return str;if(str.indexOf("&")!=-1)str=str.replace(goog.string.amperRe_,"&amp;");if(str.indexOf("<")!=-1)str=str.replace(goog.string.ltRe_,"&lt;");if(str.indexOf(">")!=-1)str=str.replace(goog.string.gtRe_,"&gt;");
if(str.indexOf('"')!=-1)str=str.replace(goog.string.quotRe_,"&quot;");return str}};goog.string.amperRe_=/&/g;goog.string.ltRe_=/</g;goog.string.gtRe_=/>/g;goog.string.quotRe_=/\"/g;goog.string.allRe_=/[&<>\"]/;goog.string.unescapeEntities=function(str){if(goog.string.contains(str,"&"))if("document"in goog.global&&!goog.string.contains(str,"<"))return goog.string.unescapeEntitiesUsingDom_(str);else return goog.string.unescapePureXmlEntities_(str);return str};
goog.string.unescapeEntitiesUsingDom_=function(str){var el=goog.global["document"]["createElement"]("a");el["innerHTML"]=str;if(el[goog.string.NORMALIZE_FN_])el[goog.string.NORMALIZE_FN_]();str=el["firstChild"]["nodeValue"];el["innerHTML"]="";return str};
goog.string.unescapePureXmlEntities_=function(str){return str.replace(/&([^;]+);/g,function(s,entity){switch(entity){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:if(entity.charAt(0)=="#"){var n=Number("0"+entity.substr(1));if(!isNaN(n))return String.fromCharCode(n)}return s}})};goog.string.NORMALIZE_FN_="normalize";goog.string.whitespaceEscape=function(str,opt_xml){return goog.string.newLineToBr(str.replace(/  /g," &#160;"),opt_xml)};
goog.string.stripQuotes=function(str,quoteChars){var length=quoteChars.length;for(var i=0;i<length;i++){var quoteChar=length==1?quoteChars:quoteChars.charAt(i);if(str.charAt(0)==quoteChar&&str.charAt(str.length-1)==quoteChar)return str.substring(1,str.length-1)}return str};
goog.string.truncate=function(str,chars,opt_protectEscapedCharacters){if(opt_protectEscapedCharacters)str=goog.string.unescapeEntities(str);if(str.length>chars)str=str.substring(0,chars-3)+"...";if(opt_protectEscapedCharacters)str=goog.string.htmlEscape(str);return str};
goog.string.truncateMiddle=function(str,chars,opt_protectEscapedCharacters){if(opt_protectEscapedCharacters)str=goog.string.unescapeEntities(str);if(str.length>chars){var half=Math.floor(chars/2);var endPos=str.length-half;half+=chars%2;str=str.substring(0,half)+"..."+str.substring(endPos)}if(opt_protectEscapedCharacters)str=goog.string.htmlEscape(str);return str};goog.string.jsEscapeCache_={"\u0008":"\\b","\u000c":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\u000b":"\\x0B",'"':'\\"',"'":"\\'","\\":"\\\\"};
goog.string.quote=function(s){s=String(s);if(s.quote)return s.quote();else{var sb=['"'];for(var i=0;i<s.length;i++)sb[i+1]=goog.string.escapeChar(s.charAt(i));sb.push('"');return sb.join("")}};
goog.string.escapeChar=function(c){if(c in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[c];var rv=c;var cc=c.charCodeAt(0);if(cc>31&&cc<127)rv=c;else{if(cc<256){rv="\\x";if(cc<16||cc>256)rv+="0"}else{rv="\\u";if(cc<4096)rv+="0"}rv+=cc.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[c]=rv};goog.string.toMap=function(s){var rv={};for(var i=0;i<s.length;i++)rv[s.charAt(i)]=true;return rv};goog.string.contains=function(s,ss){return s.indexOf(ss)!=-1};
goog.string.removeAt=function(s,index,stringLength){var resultStr=s;if(index>=0&&index<s.length&&stringLength>0)resultStr=s.substr(0,index)+s.substr(index+stringLength,s.length-index-stringLength);return resultStr};goog.string.remove=function(s,ss){var re=new RegExp(goog.string.regExpEscape(ss),"");return s.replace(re,"")};goog.string.removeAll=function(s,ss){var re=new RegExp(goog.string.regExpEscape(ss),"g");return s.replace(re,"")};
goog.string.regExpEscape=function(s){return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=function(string,length){return(new Array(length+1)).join(string)};goog.string.padNumber=function(num,length,opt_precision){var s=goog.isDef(opt_precision)?num.toFixed(opt_precision):String(num);var index=s.indexOf(".");if(index==-1)index=s.length;return goog.string.repeat("0",Math.max(0,length-index))+s};
goog.string.makeSafe=function(obj){return obj==null?"":String(obj)};goog.string.buildString=function(var_args){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(Math.random()*2147483648).toString(36)+(Math.floor(Math.random()*2147483648)^goog.now()).toString(36)};
goog.string.compareVersions=function(version1,version2){var order=0;var v1Subs=goog.string.trim(String(version1)).split(".");var v2Subs=goog.string.trim(String(version2)).split(".");var subCount=Math.max(v1Subs.length,v2Subs.length);for(var subIdx=0;order==0&&subIdx<subCount;subIdx++){var v1Sub=v1Subs[subIdx]||"";var v2Sub=v2Subs[subIdx]||"";var v1CompParser=new RegExp("(\\d*)(\\D*)","g");var v2CompParser=new RegExp("(\\d*)(\\D*)","g");do{var v1Comp=v1CompParser.exec(v1Sub)||["","",""];var v2Comp=
v2CompParser.exec(v2Sub)||["","",""];if(v1Comp[0].length==0&&v2Comp[0].length==0)break;var v1CompNum=v1Comp[1].length==0?0:parseInt(v1Comp[1],10);var v2CompNum=v2Comp[1].length==0?0:parseInt(v2Comp[1],10);order=goog.string.compareElements_(v1CompNum,v2CompNum)||goog.string.compareElements_(v1Comp[2].length==0,v2Comp[2].length==0)||goog.string.compareElements_(v1Comp[2],v2Comp[2])}while(order==0)}return order};
goog.string.compareElements_=function(left,right){if(left<right)return-1;else if(left>right)return 1;return 0};goog.string.HASHCODE_MAX_=4294967296;goog.string.hashCode=function(str){var result=0;for(var i=0;i<str.length;++i){result=31*result+str.charCodeAt(i);result%=goog.string.HASHCODE_MAX_}return result};goog.string.uniqueStringCounter_=Math.random()*2147483648|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};
goog.string.toNumber=function(str){var num=Number(str);if(num==0&&goog.string.isEmpty(str))return NaN;return num};goog.provide("goog.debug");goog.require("goog.array");goog.require("goog.string");goog.require("goog.structs.Set");goog.debug.catchErrors=function(logFunc,opt_cancel,opt_target){var target=opt_target||goog.global;var oldErrorHandler=target.onerror;target.onerror=function(message,url,line){if(oldErrorHandler)oldErrorHandler(message,url,line);var file=String(url).split(/[\/\\]/).pop();logFunc({message:message,fileName:file,line:line});return Boolean(opt_cancel)}};
goog.debug.expose=function(obj,opt_showFn){if(typeof obj=="undefined")return"undefined";if(obj==null)return"NULL";var str=[];for(var x in obj){if(!opt_showFn&&goog.isFunction(obj[x]))continue;var s=x+" = ";try{s+=obj[x]}catch(e){s+="*** "+e+" ***"}str.push(s)}return str.join("\n")};
goog.debug.deepExpose=function(obj,opt_showFn){var previous=new goog.structs.Set;var str=[];var helper=function(obj,space){var nestspace=space+"  ";var indentMultiline=function(str){return str.replace(/\n/g,"\n"+space)};try{if(!goog.isDef(obj))str.push("undefined");else if(goog.isNull(obj))str.push("NULL");else if(goog.isString(obj))str.push('"'+indentMultiline(obj)+'"');else if(goog.isFunction(obj))str.push(indentMultiline(String(obj)));else if(goog.isObject(obj))if(previous.contains(obj))str.push("*** reference loop detected ***");
else{previous.add(obj);str.push("{");for(var x in obj){if(!opt_showFn&&goog.isFunction(obj[x]))continue;str.push("\n");str.push(nestspace);str.push(x+" = ");helper(obj[x],nestspace)}str.push("\n"+space+"}")}else str.push(obj)}catch(e){str.push("*** "+e+" ***")}};helper(obj,"");return str.join("")};goog.debug.exposeArray=function(arr){var str=[];for(var i=0;i<arr.length;i++)if(goog.isArray(arr[i]))str.push(goog.debug.exposeArray(arr[i]));else str.push(arr[i]);return"[ "+str.join(", ")+" ]"};
goog.debug.exposeException=function(err,opt_fn){try{var e=goog.debug.normalizeErrorObject(err);var error="Message: "+goog.string.htmlEscape(e.message)+'\nUrl: <a href="view-source:'+e.fileName+'" target="_new">'+e.fileName+"</a>\nLine: "+e.lineNumber+"\n\nBrowser stack:\n"+goog.string.htmlEscape(e.stack+"-> ")+"[end]\n\nJS stack traversal:\n"+goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn)+"-> ");return error}catch(e2){return"Exception trying to expose exception! You win, we lose. "+e2}};
goog.debug.normalizeErrorObject=function(err){var href=goog.getObjectByName("window.location.href");return typeof err=="string"?{message:err,name:"Unknown error",lineNumber:"Not available",fileName:href,stack:"Not available"}:!err.lineNumber||!err.fileName||!err.stack?{message:err.message,name:err.name,lineNumber:err.lineNumber||err.line||"Not available",fileName:err.fileName||err.filename||err.sourceURL||href,stack:err.stack||"Not available"}:err};
goog.debug.enhanceError=function(err,opt_message){var error=typeof err=="string"?Error(err):err;if(!error.stack)error.stack=goog.debug.getStacktrace(arguments.callee.caller);if(opt_message){var x=0;while(error["message"+x])++x;error["message"+x]=String(opt_message)}return error};
goog.debug.getStacktraceSimple=function(opt_depth){var sb=[];var fn=arguments.callee.caller;var depth=0;while(fn&&(!opt_depth||depth<opt_depth)){sb.push(goog.debug.getFunctionName(fn));sb.push("()\n");try{fn=fn.caller}catch(e){sb.push("[exception trying to get caller]\n");break}depth++;if(depth>=goog.debug.MAX_STACK_DEPTH){sb.push("[...long stack...]");break}}if(opt_depth&&depth>=opt_depth)sb.push("[...reached max depth limit...]");else sb.push("[end]");return sb.join("")};
goog.debug.MAX_STACK_DEPTH=50;goog.debug.getStacktrace=function(opt_fn){return goog.debug.getStacktraceHelper_(opt_fn||arguments.callee.caller,[])};
goog.debug.getStacktraceHelper_=function(fn,visited){var sb=[];if(goog.array.contains(visited,fn))sb.push("[...circular reference...]");else if(fn&&visited.length<goog.debug.MAX_STACK_DEPTH){sb.push(goog.debug.getFunctionName(fn)+"(");var args=fn.arguments;for(var i=0;i<args.length;i++){if(i>0)sb.push(", ");var argDesc;var arg=args[i];switch(typeof arg){case "object":argDesc=arg?"object":"null";break;case "string":argDesc=arg;break;case "number":argDesc=String(arg);break;case "boolean":argDesc=arg?
"true":"false";break;case "function":argDesc=goog.debug.getFunctionName(arg);argDesc=argDesc?argDesc:"[fn]";break;case "undefined":default:argDesc=typeof arg;break}if(argDesc.length>40)argDesc=argDesc.substr(0,40)+"...";sb.push(argDesc)}visited.push(fn);sb.push(")\n");try{sb.push(goog.debug.getStacktraceHelper_(fn.caller,visited))}catch(e){sb.push("[exception trying to get caller]\n")}}else if(fn)sb.push("[...long stack...]");else sb.push("[end]");return sb.join("")};
goog.debug.getFunctionName=function(fn){var functionSource=String(fn);if(!goog.debug.fnNameCache_[functionSource]){var matches=/function ([^\(]+)/.exec(functionSource);if(matches){var method=matches[1];goog.debug.fnNameCache_[functionSource]=method}else goog.debug.fnNameCache_[functionSource]="[Anonymous]"}return goog.debug.fnNameCache_[functionSource]};
goog.debug.makeWhitespaceVisible=function(string){return string.replace(/ /g,"[_]").replace(/\f/g,"[f]").replace(/\n/g,"[n]\n").replace(/\r/g,"[r]").replace(/\t/g,"[t]")};goog.debug.fnNameCache_={};goog.provide("goog.debug.LogRecord");goog.debug.LogRecord=function(level,msg,loggerName,opt_time,opt_sequenceNumber){this.sequenceNumber_=typeof opt_sequenceNumber=="number"?opt_sequenceNumber:goog.debug.LogRecord.nextSequenceNumber_++;this.time_=opt_time||goog.now();this.level_=level;this.msg_=msg;this.loggerName_=loggerName};goog.debug.LogRecord.prototype.exception_=null;goog.debug.LogRecord.prototype.exceptionText_=null;goog.debug.LogRecord.nextSequenceNumber_=0;
goog.debug.LogRecord.prototype.getLoggerName=function(){return this.loggerName_};goog.debug.LogRecord.prototype.getException=function(){return this.exception_};goog.debug.LogRecord.prototype.setException=function(exception){this.exception_=exception};goog.debug.LogRecord.prototype.getExceptionText=function(){return this.exceptionText_};goog.debug.LogRecord.prototype.setExceptionText=function(text){this.exceptionText_=text};
goog.debug.LogRecord.prototype.setLoggerName=function(loggerName){this.loggerName_=loggerName};goog.debug.LogRecord.prototype.getLevel=function(){return this.level_};goog.debug.LogRecord.prototype.setLevel=function(level){this.level_=level};goog.debug.LogRecord.prototype.getMessage=function(){return this.msg_};goog.debug.LogRecord.prototype.setMessage=function(msg){this.msg_=msg};goog.debug.LogRecord.prototype.getMillis=function(){return this.time_};
goog.debug.LogRecord.prototype.setMillis=function(time){this.time_=time};goog.debug.LogRecord.prototype.getSequenceNumber=function(){return this.sequenceNumber_};goog.provide("goog.debug.LogManager");goog.provide("goog.debug.Logger");goog.provide("goog.debug.Logger.Level");goog.require("goog.array");goog.require("goog.debug");goog.require("goog.debug.LogRecord");goog.debug.Logger=function(name){this.name_=name};goog.debug.Logger.prototype.parent_=null;goog.debug.Logger.prototype.level_=null;goog.debug.Logger.prototype.children_=null;goog.debug.Logger.prototype.handlers_=null;goog.debug.Logger.Level=function(name,value){this.name=name;this.value=value};
goog.debug.Logger.Level.prototype.toString=function(){return this.name};goog.debug.Logger.Level.OFF=new goog.debug.Logger.Level("OFF",Infinity);goog.debug.Logger.Level.SHOUT=new goog.debug.Logger.Level("SHOUT",1200);goog.debug.Logger.Level.SEVERE=new goog.debug.Logger.Level("SEVERE",1E3);goog.debug.Logger.Level.WARNING=new goog.debug.Logger.Level("WARNING",900);goog.debug.Logger.Level.INFO=new goog.debug.Logger.Level("INFO",800);
goog.debug.Logger.Level.CONFIG=new goog.debug.Logger.Level("CONFIG",700);goog.debug.Logger.Level.FINE=new goog.debug.Logger.Level("FINE",500);goog.debug.Logger.Level.FINER=new goog.debug.Logger.Level("FINER",400);goog.debug.Logger.Level.FINEST=new goog.debug.Logger.Level("FINEST",300);goog.debug.Logger.Level.ALL=new goog.debug.Logger.Level("ALL",0);
goog.debug.Logger.Level.PREDEFINED_LEVELS=[goog.debug.Logger.Level.OFF,goog.debug.Logger.Level.SHOUT,goog.debug.Logger.Level.SEVERE,goog.debug.Logger.Level.WARNING,goog.debug.Logger.Level.INFO,goog.debug.Logger.Level.CONFIG,goog.debug.Logger.Level.FINE,goog.debug.Logger.Level.FINER,goog.debug.Logger.Level.FINEST,goog.debug.Logger.Level.ALL];goog.debug.Logger.Level.predefinedLevelsCache_=null;
goog.debug.Logger.Level.createPredefinedLevelsCache_=function(){goog.debug.Logger.Level.predefinedLevelsCache_={};for(var i=0,level;level=goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++){goog.debug.Logger.Level.predefinedLevelsCache_[level.value]=level;goog.debug.Logger.Level.predefinedLevelsCache_[level.name]=level}};
goog.debug.Logger.Level.getPredefinedLevel=function(name){if(!goog.debug.Logger.Level.predefinedLevelsCache_)goog.debug.Logger.Level.createPredefinedLevelsCache_();return goog.debug.Logger.Level.predefinedLevelsCache_[name]||null};
goog.debug.Logger.Level.getPredefinedLevelByValue=function(value){if(!goog.debug.Logger.Level.predefinedLevelsCache_)goog.debug.Logger.Level.createPredefinedLevelsCache_();if(value in goog.debug.Logger.Level.predefinedLevelsCache_)return goog.debug.Logger.Level.predefinedLevelsCache_[value];for(var i=0;i<goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i){var level=goog.debug.Logger.Level.PREDEFINED_LEVELS[i];if(level.value<=value)return level}return null};goog.debug.Logger.getLogger=function(name){return goog.debug.LogManager.getLogger(name)};
goog.debug.Logger.prototype.getName=function(){return this.name_};goog.debug.Logger.prototype.addHandler=function(handler){if(!this.handlers_)this.handlers_=[];this.handlers_.push(handler)};goog.debug.Logger.prototype.removeHandler=function(handler){return!!this.handlers_&&goog.array.remove(this.handlers_,handler)};goog.debug.Logger.prototype.getParent=function(){return this.parent_};goog.debug.Logger.prototype.getChildren=function(){if(!this.children_)this.children_={};return this.children_};
goog.debug.Logger.prototype.setLevel=function(level){this.level_=level};goog.debug.Logger.prototype.getLevel=function(){return this.level_};goog.debug.Logger.prototype.getEffectiveLevel=function(){if(this.level_)return this.level_;if(this.parent_)return this.parent_.getEffectiveLevel();return null};goog.debug.Logger.prototype.isLoggable=function(level){if(this.level_)return level.value>=this.level_.value;if(this.parent_)return this.parent_.isLoggable(level);return false};
goog.debug.Logger.prototype.log=function(level,msg,opt_exception){if(this.isLoggable(level))this.doLogRecord_(this.getLogRecord(level,msg,opt_exception))};goog.debug.Logger.prototype.getLogRecord=function(level,msg,opt_exception){var logRecord=new goog.debug.LogRecord(level,String(msg),this.name_);if(opt_exception){logRecord.setException(opt_exception);logRecord.setExceptionText(goog.debug.exposeException(opt_exception,arguments.callee.caller))}return logRecord};
goog.debug.Logger.prototype.shout=function(msg,opt_exception){this.log(goog.debug.Logger.Level.SHOUT,msg,opt_exception)};goog.debug.Logger.prototype.severe=function(msg,opt_exception){this.log(goog.debug.Logger.Level.SEVERE,msg,opt_exception)};goog.debug.Logger.prototype.warning=function(msg,opt_exception){this.log(goog.debug.Logger.Level.WARNING,msg,opt_exception)};goog.debug.Logger.prototype.info=function(msg,opt_exception){this.log(goog.debug.Logger.Level.INFO,msg,opt_exception)};
goog.debug.Logger.prototype.config=function(msg,opt_exception){this.log(goog.debug.Logger.Level.CONFIG,msg,opt_exception)};goog.debug.Logger.prototype.fine=function(msg,opt_exception){this.log(goog.debug.Logger.Level.FINE,msg,opt_exception)};goog.debug.Logger.prototype.finer=function(msg,opt_exception){this.log(goog.debug.Logger.Level.FINER,msg,opt_exception)};goog.debug.Logger.prototype.finest=function(msg,opt_exception){this.log(goog.debug.Logger.Level.FINEST,msg,opt_exception)};
goog.debug.Logger.prototype.logRecord=function(logRecord){if(this.isLoggable(logRecord.getLevel()))this.doLogRecord_(logRecord)};goog.debug.Logger.prototype.doLogRecord_=function(logRecord){var target=this;while(target){target.callPublish_(logRecord);target=target.getParent()}};goog.debug.Logger.prototype.callPublish_=function(logRecord){if(this.handlers_)for(var i=0,handler;handler=this.handlers_[i];i++)handler(logRecord)};goog.debug.Logger.prototype.setParent_=function(parent){this.parent_=parent};
goog.debug.Logger.prototype.addChild_=function(name,logger){this.getChildren()[name]=logger};goog.debug.LogManager={};goog.debug.LogManager.loggers_={};goog.debug.LogManager.rootLogger_=null;goog.debug.LogManager.initialize=function(){if(!goog.debug.LogManager.rootLogger_){goog.debug.LogManager.rootLogger_=new goog.debug.Logger("");goog.debug.LogManager.loggers_[""]=goog.debug.LogManager.rootLogger_;goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)}};
goog.debug.LogManager.getLoggers=function(){return goog.debug.LogManager.loggers_};goog.debug.LogManager.getRoot=function(){goog.debug.LogManager.initialize();return goog.debug.LogManager.rootLogger_};goog.debug.LogManager.getLogger=function(name){goog.debug.LogManager.initialize();var ret=goog.debug.LogManager.loggers_[name];return ret||goog.debug.LogManager.createLogger_(name)};
goog.debug.LogManager.createFunctionForCatchErrors=function(opt_logger){return function(info){var logger=opt_logger||goog.debug.LogManager.getRoot();logger.severe("Error: "+info.message+" ("+info.fileName+" @ Line: "+info.line+")")}};
goog.debug.LogManager.createLogger_=function(name){var logger=new goog.debug.Logger(name);var lastDotIndex=name.lastIndexOf(".");var parentName=name.substr(0,lastDotIndex);var leafName=name.substr(lastDotIndex+1);var parentLogger=goog.debug.LogManager.getLogger(parentName);parentLogger.addChild_(leafName,logger);logger.setParent_(parentLogger);goog.debug.LogManager.loggers_[name]=logger;return logger};goog.provide("kemia.model.Reaction");goog.require("kemia.model.Molecule");goog.require("goog.math.Box");goog.require("goog.math.Rect");goog.require("goog.debug.Logger");kemia.model.Reaction=function(){this.header="";this.reactants=[];this.products=[];this.arrows=[];this.pluses=[];this.reagentsText="";this.conditionsText=""};kemia.model.Reaction.prototype.addReactant=function(mol){this.reactants.push(mol);mol.reaction=this};
kemia.model.Reaction.prototype.addProduct=function(mol){this.products.push(mol);mol.reaction=this};kemia.model.Reaction.prototype.isReactant=function(mol){return goog.array.contains(this.reactants,mol)};kemia.model.Reaction.prototype.isProduct=function(mol){return goog.array.contains(this.products,mol)};
kemia.model.Reaction.prototype.removeMolecule=function(mol){if(goog.array.contains(this.reactants,mol)){goog.array.remove(this.reactants,mol);mol.reaction=undefined}else if(goog.array.contains(this.products,mol)){goog.array.remove(this.products,mol);mol.reaction=undefined}};kemia.model.Reaction.prototype.addArrow=function(coord){this.arrows.push(coord);coord.reaction=this};kemia.model.Reaction.prototype.removeArrow=function(coord){goog.array.remove(this.arrows,coord);coord.reaction=undefined};
kemia.model.Reaction.prototype.addPlus=function(coord){this.pluses.push(coord);coord.reaction=this};kemia.model.Reaction.prototype.removePlus=function(coord){goog.array.remove(this.pluses,coord);coord.reaction=undefined};kemia.model.Reaction.prototype.removeArrowOrPlus=function(coord){if(goog.array.contains(this.arrows,coord))this.removeArrow(coord);else if(goog.array.contains(this.pluses,coord))this.removePlus(coord)};
kemia.model.Reaction.prototype.generatePlusCoords=function(molecules){var previousMol;goog.array.forEach(molecules,function(mol){if(previousMol){var center=this.center([previousMol,mol]);this.addPlus(center)}previousMol=mol},this)};kemia.model.Reaction.prototype.generateArrowCoords=function(reactants,products){var r_box=this.boundingBox(reactants);var p_box=this.boundingBox(products);this.addArrow(new goog.math.Coordinate((r_box.right+p_box.left)/2,(r_box.top+p_box.bottom)/2))};
kemia.model.Reaction.prototype.boundingBox=function(molecules){var atoms=goog.array.flatten(goog.array.map(molecules,function(mol){return mol.atoms}));var coords=goog.array.map(atoms,function(a){return a.coord});return goog.math.Box.boundingBox.apply(null,coords)};kemia.model.Reaction.prototype.center=function(molecules){var bbox=this.boundingBox(molecules);return new goog.math.Coordinate((bbox.left+bbox.right)/2,(bbox.top+bbox.bottom)/2)};
kemia.model.Reaction.prototype.removeOverlap=function(){var margin=4;var molecules=goog.array.concat(this.reactants,this.products);var accumulated_rect;goog.array.forEach(molecules,function(mol){var mol_rect=goog.math.Rect.createFromBox(this.boundingBox([mol]));if(accumulated_rect){if(goog.math.Rect.intersection(accumulated_rect,mol_rect))this.translateMolecule(mol,new goog.math.Coordinate(margin+accumulated_rect.left+accumulated_rect.width-mol_rect.left,0));accumulated_rect.boundingRect(goog.math.Rect.createFromBox(this.boundingBox([mol])))}else accumulated_rect=
mol_rect},this)};kemia.model.Reaction.prototype.translateMolecule=function(molecule,coord){goog.array.forEach(molecule.atoms,function(a){a.coord=goog.math.Coordinate.sum(a.coord,coord)});return molecule};kemia.model.Reaction.prototype.rotateMolecule=function(molecule,degrees,center){var trans=kemia.graphics.AffineTransform.getRotateInstance(goog.math.toRadians(degrees),center.x,center.y);goog.array.forEach(molecule.atoms,function(a){a.coord=trans.transformCoords([a.coord])[0]});return molecule};goog.provide("kemia.io.smiles.SmilesParser");goog.require("kemia.model.Molecule");goog.require("kemia.model.Atom");goog.require("kemia.model.Bond");goog.require("kemia.model.Reaction");kemia.io.smiles.SmilesParser.BondType={NONE:"NONE",SINGLE_BOND:"-",DOUBLE_BOND:"=",TRIPLE_BOND:"#",QUAD_BOND:"$",AROMATIC_BOND:":",ANY:"~"};kemia.io.smiles.SmilesParser.BondStereo={NONE:"NONE",CLOCKWISE:"@",COUNTER_CLOCKWISE:"@@"};
kemia.io.smiles.SmilesParser.punctuation={nobond:".",openbranch:"(",closebranch:")",singlebond:kemia.io.smiles.SmilesParser.BondType.SINGLE_BOND,doublebond:kemia.io.smiles.SmilesParser.BondType.DOUBLE_BOND,triplebond:kemia.io.smiles.SmilesParser.BondType.TRIPLE_BOND,quadbond:kemia.io.smiles.SmilesParser.BondType.QUAD_BOND,aromaticbond:kemia.io.smiles.SmilesParser.BondType.AROMATIC_BOND,ringclosure:"%",cis:"/",trans:"\\"};kemia.io.smiles.SmilesParser.smiPattern=new RegExp(/\[[^[]+\]|Br|B|Cl|C|N|F|O|P]|S|c|n|o|s|-|=|#|%[0-9][0-9]|[0-9]|\(|\)|./g);
kemia.io.smiles.SmilesParser.atomPattern=new RegExp(/^\[([0-9]*)([A-Z][a-z]?|c|n|o|se|s|as)(@|@@)?(H)?([0-9])?([+-][\d]?)?\]$/);kemia.io.smiles.SmilesParser.specialAtoms={C:1,c:1,N:1,n:1,O:1,o:1,S:1,s:1,P:1,F:1,Br:1,Cl:1,I:1,B:1};kemia.io.smiles.SmilesParser.aromaticAtoms={c:1,n:1,o:1,s:1,as:1,se:1};
kemia.io.smiles.SmilesParser.parse=function(smi){items=smi.match(this.smiPattern);var mol=new kemia.model.Molecule(smi);var natoms=0;var previous_atom;var bond_type=kemia.io.smiles.SmilesParser.BondType.NONE;var branch=new Array;var ring=new Array;var errstr="";var chiralCenters=new Array;for(var i=0;i<items.length;i++){var item=items[i];if(item==this.punctuation.nobond);else if(item==this.punctuation.openbranch)branch.push(previous_atom);else if(item==this.punctuation.closebranch)if(branch.length)previous_atom=
branch.pop();else errstr=" unbalanced parens";else if(item==this.punctuation.singlebond)bond_type=kemia.io.smiles.SmilesParser.BondType.SINGLE_BOND;else if(item==this.punctuation.doublebond)bond_type=kemia.io.smiles.SmilesParser.BondType.DOUBLE_BOND;else if(item==this.punctuation.triplebond)bond_type=kemia.io.smiles.SmilesParser.BondType.TRIPLE_BOND;else if(item==this.punctuation.quadbond)bond_type=kemia.io.smiles.SmilesParser.BondType.QUAD_BOND;else if(item==this.punctuation.aromaticbond)bond_type=
kemia.io.smiles.SmilesParser.BondType.AROMATIC_BOND;else if(item[0]==this.punctuation.ringclosure){ringid=parseInt(item[1]+item[2]);ring_atom=ring[ringid];if(ring_atom){mol.addBond(this.createBond(bond_type,previous_atom,ring_atom));bond_type=kemia.io.smiles.SmilesParser.BondType.NONE;ring[ringid]=null}else ring[ringid]=previous_atom}else if(item==this.punctuation.cis);else if(item==this.punctuation.trans);else if(!isNaN(ringid=parseInt(item))){ring_atom=ring[ringid];if(ring_atom){mol.addBond(this.createBond(bond_type,
previous_atom,ring_atom));bond_type=kemia.io.smiles.SmilesParser.BondType.NONE;ring[ringid]=null}else ring[ringid]=previous_atom}else{smi_atom=this.parseAtom(item,chiralCenters);if(smi_atom.symbol){natoms+=1;var atom=new kemia.model.Atom(smi_atom.symbol,0,0,smi_atom.charge,smi_atom.aromatic,smi_atom.isotope);if(previous_atom){mol.addBond(this.createBond(bond_type,previous_atom,atom));bond_type=kemia.io.smiles.SmilesParser.BondType.NONE}mol.addAtom(atom);if(smi_atom.stereo!="NONE"){chiralCenters.push(mol.indexOfAtom(atom));
chiralCenters.push(smi_atom.stereo);chiralCenters.push(smi_atom.chiralHydrogenNeighbour)}previous_atom=atom}else errstr=" unknown atom "+item}if(errstr){throw new Error(smi+errstr);break}}this.setChiralCenters(mol,chiralCenters);if(this.sanityCheck(branch,ring,bond_type))return mol;else return null};
kemia.io.smiles.SmilesParser.sanityCheck=function(branch,ring,bond_type){if(branch.length){throw new Error(smi+" unbalanced parens");return false}for(var i=0;i<ring.length;++i)if(ring[i]){throw new Error(smi+" unclosed rings");return false}if(bond_type!=this.BondType.NONE){throw new Error(smi+" unpaired bond "+bond_type);return false}return true};
kemia.io.smiles.SmilesParser.parseAtom=function(item){var atom={isotope:null,symbol:null,stereo:kemia.io.smiles.SmilesParser.BondStereo.NONE,hcount:null,charge:null,aromatic:false,chiralHydrogenNeighbour:false};var atomProp=this.atomPattern.exec(item);if(atomProp){atom.isotope=atomProp[1];if(this.periodicTable[atomProp[2]])atom.symbol=atomProp[2];if(atomProp[3]==kemia.io.smiles.SmilesParser.BondStereo.CLOCKWISE||atomProp[3]==kemia.io.smiles.SmilesParser.BondStereo.COUNTER_CLOCKWISE){atom.stereo=atomProp[3];
if(atomProp[4]=="H")atom.chiralHydrogenNeighbour=true}else atom.stereo=kemia.io.smiles.SmilesParser.BondStereo.NONE;if(atomProp[4]=="H")if(atomProp[5])atom.hcount=atomProp[5];else atom.hcount=1;if(atomProp[6]=="+")atom.charge=1;else if(atomProp[6]=="-")atom.charge=-1;else atom.charge=parseInt(atomProp[6])}else if(this.specialAtoms[item])atom.symbol=item;if(this.aromaticAtoms[atom.symbol]){atom.aromatic=true;if(atom.symbol.length==1)atom.symbol=atom.symbol.toUpperCase();else atom.symbol=atom.symbol[0].toUpperCase()+
atom.symbol[1]}return atom};
kemia.io.smiles.SmilesParser.createBond=function(type,source,target){var atype=type;if(type==kemia.io.smiles.SmilesParser.BondType.NONE)if(source.aromatic&&target.aromatic)atype=kemia.io.smiles.SmilesParser.BondType.AROMATIC_BOND;else atype=kemia.io.smiles.SmilesParser.BondType.SINGLE_BOND;switch(atype){case kemia.io.smiles.SmilesParser.BondType.SINGLE_BOND:return new kemia.model.Bond(source,target,kemia.model.Bond.ORDER.SINGLE);case kemia.io.smiles.SmilesParser.BondType.DOUBLE_BOND:return new kemia.model.Bond(source,target,
kemia.model.Bond.ORDER.DOUBLE);case kemia.io.smiles.SmilesParser.BondType.TRIPLE_BOND:return new kemia.model.Bond(source,target,kemia.model.Bond.ORDER.TRIPLE);case kemia.io.smiles.SmilesParser.BondType.AROMATIC_BOND:var bond=new kemia.model.Bond(source,target);bond.aromatic=true;return bond;case kemia.io.smiles.SmilesParser.BondType.ANY:default:throw new Error("invalid bond type/stereo ["+type+"]/["+stereo+"]");}};
kemia.io.smiles.SmilesParser.setChiralCenters=function(molecule,chiralCenters){for(c=0,centers=chiralCenters.length;c<centers;c++){atIndex=chiralCenters[c];chiralAtom=molecule.getAtom(atIndex);if(chiralAtom!=undefined){var direction=chiralCenters[++c];var chiralHydrogenNeighbour=chiralCenters[++c];var cnt=0;var availableBonds=new Array;var cntNeighb=0;var bond=null;goog.array.forEach(molecule.atoms,function(atom){bond_=molecule.findBond(chiralAtom,atom);if(bond_!=null&&bond_!=undefined){if(bond_.source!=
chiralAtom){bond_.source=chiralAtom;bond_.target=atom}cntNeighb++;if(!molecule.isBondInRing(bond_))availableBonds.push(bond_)}});var numOfAvBonds=availableBonds.length;if((cntNeighb==3||cntNeighb==4)&&numOfAvBonds>0){bondidx=0;if(cntNeighb==3&&numOfAvBonds>1||cntNeighb==4&&numOfAvBonds>2)bondidx=1;bond=availableBonds[bondidx];if(direction==kemia.io.smiles.SmilesParser.BondStereo.CLOCKWISE)bond.stereo=kemia.model.Bond.STEREO.UP;else bond.stereo=kemia.model.Bond.STEREO.DOWN}if(cntNeighb==4&&numOfAvBonds>
1){bondidx=1;if(numOfAvBonds==4)bondidx=3;else if(numOfAvBonds==4)bondidx=2;bond=availableBonds[bondidx];if(direction==kemia.io.smiles.SmilesParser.BondStereo.CLOCKWISE)bond.stereo=kemia.model.Bond.STEREO.DOWN;else bond.stereo=kemia.model.Bond.STEREO.UP}}}};
kemia.io.smiles.SmilesParser.periodicTable={H:{number:1,name:"Hydrogen"},He:{number:2,name:"Helium"},Li:{number:3,name:"Lithium"},Be:{number:4,name:"Beryllium"},B:{number:5,name:"Boron"},C:{number:6,name:"Carbon"},c:{number:6,name:"Carbon"},N:{number:7,name:"Nitrogen"},n:{number:7,name:"Nitrogen"},O:{number:8,name:"Oxygen"},o:{number:8,name:"Oxygen"},F:{number:9,name:"Fluorine"},Ne:{number:10,name:"Neon"},Na:{number:11,name:"Sodium"},Mg:{number:12,name:"Magnesium"},Al:{number:13,name:"Aluminium"},
Si:{number:14,name:"Silicon"},P:{number:15,name:"Phosphorus"},S:{number:16,name:"Sulfur"},s:{number:16,name:"Sulfur"},Cl:{number:17,name:"Chlorine"},Ar:{number:18,name:"Argon"},K:{number:19,name:"Potassium"},Ca:{number:20,name:"Calcium"},Sc:{number:21,name:"Scandium"},Ti:{number:22,name:"Titanium"},V:{number:23,name:"Vanadium"},Cr:{number:24,name:"Chromium"},Mn:{number:25,name:"Manganese"},Fe:{number:26,name:"Iron"},Co:{number:27,name:"Cobalt"},Ni:{number:28,name:"Nickel"},Cu:{number:29,name:"Copper"},
Zn:{number:30,name:"Zinc"},Ga:{number:31,name:"Gallium"},Ge:{number:32,name:"Germanium"},As:{number:33,name:"Arsenic"},as:{number:33,name:"Arsenic"},Se:{number:34,name:"Selenium"},se:{number:34,name:"Selenium"},Br:{number:35,name:"Bromine"},Kr:{number:36,name:"Krypton"},Rb:{number:37,name:"Rubidium"},Sr:{number:38,name:"Strontium"},Y:{number:39,name:"Yttrium"},Zr:{number:40,name:"Zirconium"},Nb:{number:41,name:"Niobium"},Mo:{number:42,name:"Molybdenum"},Tc:{number:43,name:"Technetium"},Ru:{number:44,
name:"Ruthenium"},Rh:{number:45,name:"Rhodium"},Pd:{number:46,name:"Palladium"},Ag:{number:47,name:"Silver"},Cd:{number:48,name:"Cadmium"},In:{number:49,name:"Indium"},Sn:{number:50,name:"Tin"},Sb:{number:51,name:"Antimony"},Te:{number:52,name:"Tellurium"},I:{number:53,name:"Iodine"},Xe:{number:54,name:"Xenon"},Cs:{number:55,name:"Caesium"},Ba:{number:56,name:"Barium"},La:{number:57,name:"Lanthanum"},Ce:{number:58,name:"Cerium"},Pr:{number:59,name:"Praseodymium"},Nd:{number:60,name:"Neodymium"},Pm:{number:61,
name:"Promethium"},Sm:{number:62,name:"Samarium"},Eu:{number:63,name:"Europium"},Gd:{number:64,name:"Gadolinium"},Tb:{number:65,name:"Terbium"},Dy:{number:66,name:"Dysprosium"},Ho:{number:67,name:"Holmium"},Er:{number:68,name:"Erbium"},Tm:{number:69,name:"Thulium"},Yb:{number:70,name:"Ytterbium"},Lu:{number:71,name:"Lutetium"},Hf:{number:72,name:"Hafnium"},Ta:{number:73,name:"Tantalum"},W:{number:74,name:"Tungsten"},Re:{number:75,name:"Rhenium"},Os:{number:76,name:"Osmium"},Ir:{number:77,name:"Iridium"},
Pt:{number:78,name:"Platinum"},Au:{number:79,name:"Gold"},Hg:{number:80,name:"Mercury"},Tl:{number:81,name:"Thallium"},Pb:{number:82,name:"Lead"},Bi:{number:83,name:"Bismuth"},Po:{number:84,name:"Polonium"},At:{number:85,name:"Astatine"},Rn:{number:86,name:"Radon"},Fr:{number:87,name:"Francium"},Ra:{number:88,name:"Radium"},Ac:{number:89,name:"Actinium"},Th:{number:90,name:"Thorium"},Pa:{number:91,name:"Protactinium"},U:{number:92,name:"Uranium"},Np:{number:93,name:"Neptunium"},Pu:{number:94,name:"Plutonium"},
Am:{number:95,name:"Americium"},Cm:{number:96,name:"Curium"},Bk:{number:97,name:"Berkelium"},Cf:{number:98,name:"Californium"},Es:{number:99,name:"Einsteinium"},Fm:{number:100,name:"Fermium"},Md:{number:101,name:"Mendelevium"},No:{number:102,name:"Nobelium"},Lr:{number:103,name:"Lawrencium"},Rf:{number:104,name:"Rutherfordium"},Db:{number:105,name:"Dubnium"},Sg:{number:106,name:"Seaborgium"},Bh:{number:107,name:"Bohrium"},Hs:{number:108,name:"Hassium"},Mt:{number:109,name:"Meitnerium"},Ds:{number:110,
name:"Darmstadtium"},Rg:{number:111,name:"Roentgenium"},Cn:{number:112,name:"Copernicium"}};goog.provide("kemia.query.MoleculeCompiler");goog.require("kemia.query.Query");
(function(){kemia.query.MoleculeCompiler={};kemia.query.MoleculeCompiler.compile=function(molecule){var query=new kemia.query.Query;for(var i=0,li=molecule.countAtoms();i<li;i++){var qatom=new kemia.query.QueryAtom;qatom.symbols.push(molecule.getAtom(i).symbol);query.addAtom(qatom)}for(i=0,li=molecule.countBonds();i<li;i++){var bond=molecule.bonds[i];var source=query.getAtom(molecule.indexOfAtom(bond.source));var target=query.getAtom(molecule.indexOfAtom(bond.target));var qbond=new kemia.query.QueryBond(source,
target);qbond.orders.push(bond.order);query.addBond(qbond)}return query}})();goog.provide("kemia.query.SmilesCompiler");goog.require("kemia.io.smiles.SmilesParser");goog.require("kemia.query.MoleculeCompiler");(function(){kemia.query.SmilesCompiler={};kemia.query.SmilesCompiler.compile=function(smiles){var molecule=kemia.io.smiles.SmilesParser.parse(smiles);var query=kemia.query.MoleculeCompiler.compile(molecule);return query}})();
